{"version":3,"sources":["components/loader/pacMan.jsx","mainConfig.js","components/graphs/importedBarGraph.jsx","components/counters/textCounter.jsx","components/graphs/averagePerHour.jsx","components/averages.jsx","components/platformContent.jsx","components/importMetrics.jsx","App.jsx","platformConfig.js","reportWebVitals.js","index.js"],"names":["PacMan","className","type","size","active","config","ImportedBarGraph","props","platform","state","data","loading","error","getTotalImports","bind","this","updateMetric","setInterval","clearInterval","axios","get","params","from","then","response","map","x","moment","date","format","y","count","setState","catch","ResponsiveContainer","width","height","BarChart","XAxis","dataKey","stroke","YAxis","Tooltip","Bar","name","fill","Component","TextCounter","text","AveragePerHour","getPostsPerHour","interval","avg","Averages","useState","averages","average","index","PlatformContent","graphs","graph","header","color","total","ImportMetrics","id","loadImporterMetrics","key","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.572e5494.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Loader from \"react-loaders\";\r\n\r\nfunction PacMan() {\r\n  return (\r\n    <div className=\"h-40 flex justify-center items-center\">\r\n      <Loader type=\"pacman\" size={\"custom\"} active />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PacMan;\r\n","export const config = {\n  updateInterval: 60_000,\n  apiUrl: \"https://cavea-test-api-php-review-develop-3zknud.cavea.dev\",\n};\n","import React, { Component } from \"react\";\r\nimport PacMan from \"../loader/pacMan\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from \"recharts\";\r\nimport { config } from \"../../mainConfig\";\r\n\r\nclass ImportedBarGraph extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.platform = this.props.platform;\r\n    this.type = this.props.type;\r\n    this.state = {\r\n      data: null,\r\n      loading: true,\r\n      error: null,\r\n    };\r\n    this.getTotalImports = this.getTotalImports.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTotalImports();\r\n\r\n    this.updateMetric = setInterval(\r\n      this.getTotalImports,\r\n      config.updateInterval\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.updateMetric);\r\n  }\r\n\r\n  getTotalImports() {\r\n    axios\r\n      .get(`${config.apiUrl}/api/logs/import/total`, {\r\n        params: {\r\n          platform: this.platform,\r\n          type: this.type,\r\n          from: 30,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const data = [...response.data].map((data) => {\r\n          return {\r\n            x: moment(data.date).format(\"DD-MM-YYYY\"),\r\n            y: data.count,\r\n          };\r\n        });\r\n\r\n        this.setState({ data: data, loading: false });\r\n      })\r\n      .catch(() => {\r\n        return this.setState({ error: true, loading: false });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.data && !this.state.error && !this.state.loading) {\r\n      return (\r\n        <div className=\"total\">\r\n          <ResponsiveContainer width=\"100%\" height={this.props.height}>\r\n            <BarChart\r\n              width={this.props.width}\r\n              height={this.props.height}\r\n              data={this.state.data}\r\n            >\r\n              <XAxis dataKey=\"x\" stroke={\"rgb(0 0 0)\"} />\r\n              <YAxis dataKey=\"y\" stroke={\"rgb(0 0 0)\"} />\r\n              <Tooltip />\r\n              <Bar dataKey=\"y\" name=\"Posts\" fill={this.props.fill} />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      );\r\n    } else if (this.state.error) {\r\n      return (\r\n        <p className=\"text-center text-gray-900 dark:text-gray-200\">\r\n          An Error Occurred!\r\n        </p>\r\n      );\r\n    } else {\r\n      return <PacMan />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ImportedBarGraph;\r\n","import React from \"react\";\r\n\r\nconst TextCounter = (props) => {\r\n  return (\r\n    <div className=\"space-y-3\">\r\n      <h2 className=\"text-center font-semibold text-gray-900 dark:text-gray-200 text-2xl subpixel-antialiased\">\r\n        {props.text}\r\n      </h2>\r\n      <p className=\"text-center text-xl text-gray-900 dark:text-gray-200 subpixel-antialiased\">\r\n        {props.data}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextCounter;\r\n","import React, { Component } from \"react\";\nimport PacMan from \"../loader/pacMan\";\nimport axios from \"axios\";\nimport TextCounter from \"../counters/textCounter\";\nimport { config } from \"../../mainConfig\";\n\nclass AveragePerHour extends Component {\n  constructor(props) {\n    super(props);\n    this.platform = this.props.platform;\n    this.type = this.props.type;\n    this.state = {\n      data: null,\n      loading: true,\n      error: null,\n    };\n    this.getPostsPerHour = this.getPostsPerHour.bind(this);\n  }\n\n  componentDidMount() {\n    this.getPostsPerHour();\n\n    this.updateMetric = setInterval(\n      this.getPostsPerHour,\n      config.updateInterval\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.updateMetric);\n  }\n\n  getPostsPerHour() {\n    axios\n      .get(`${config.apiUrl}/api/logs/import/average`, {\n        params: {\n          platform: this.platform,\n          from: 30,\n          type: this.type,\n          interval: 3600, // One hour\n        },\n      })\n      .then((response) => {\n        const { avg } = response.data;\n        this.setState({ data: avg, loading: false });\n      })\n      .catch(() => {\n        return this.setState({ error: true, loading: false });\n      });\n  }\n\n  render() {\n    if (this.state.data && !this.state.error && !this.state.loading) {\n      return <TextCounter data={this.state.data} text={this.props.text} />;\n    } else if (this.state.error) {\n      return (\n        <p className=\"text-center text-gray-900 dark:text-gray-200\">\n          An Error Occurred!\n        </p>\n      );\n    } else {\n      return <PacMan />;\n    }\n  }\n}\n\nexport default AveragePerHour;\n","import React, { useState } from \"react\";\r\nimport AveragePerHour from \"./graphs/averagePerHour\";\r\n\r\nfunction Averages(props) {\r\n  const [averages] = useState([...props.averages]);\r\n  return (\r\n    <div className=\"averages grid gap-y-3\">\r\n      {averages.map((average, index) => {\r\n        return (\r\n          <div\r\n            className={average.type + \"-per-hour\"}\r\n            key={average.type + index}\r\n          >\r\n            <AveragePerHour\r\n              platform={props.platform}\r\n              type={average.type}\r\n              text={average.text}\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Averages;\r\n","import React, { useState } from \"react\";\r\nimport ImportedBarGraph from \"./graphs/importedBarGraph\";\r\nimport Averages from \"./averages\";\r\n\r\nfunction PlatformContent(props) {\r\n  const [graphs] = useState([...props.graphs]);\r\n\r\n  return graphs.map((graph, index) => {\r\n    return (\r\n      <div\r\n        className=\"metric space-y-5\"\r\n        key={graph.platform + graph.header + index}\r\n      >\r\n        <h2 className=\"text-left font-semibold text-gray-900 dark:text-gray-200 text-2xl subpixel-antialiased\">\r\n          {graph.header}\r\n        </h2>\r\n        <div className=\"grid grid-cols-2\">\r\n          <ImportedBarGraph\r\n            platform={props.platform}\r\n            fill={props.color}\r\n            type={graph.total.type}\r\n            width={200}\r\n            height={200}\r\n          />\r\n          <Averages averages={graph.averages} platform={props.platform} />\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n}\r\n\r\nexport default PlatformContent;\r\n","import React from \"react\";\r\nimport PlatformContent from \"./platformContent\";\r\n\r\nfunction ImportMetrics(props) {\r\n  return (\r\n    <div id={props.platform + \"-metric\"} className=\"space-y-5\">\r\n      <h2 className=\"capitalize text-left font-bold text-3xl text-gray-900 dark:text-gray-200 subpixel-antialiased\">\r\n        {props.platform}\r\n      </h2>\r\n      <div className=\"grid gap-y-3 items-start\">\r\n        <PlatformContent\r\n          graphs={props.graphs}\r\n          platform={props.platform}\r\n          color={props.color}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImportMetrics;\r\n","import ImportMetrics from \"./components/importMetrics\";\r\nimport { platforms } from \"./platformConfig\";\r\n\r\nconst loadImporterMetrics = platforms.map((platform, index) => {\r\n  return <ImportMetrics {...platform} key={platform.platform} />;\r\n});\r\n\r\n/*const loadAiMetrics = platforms.map((platform) => {\r\n  return <ImportMetrics {...platform} />;\r\n});*/\r\n\r\nconst App = () => (\r\n  <div className=\"p-10 mx-auto\">\r\n    <div className=\"grid grid-cols-1 gap-6\">{loadImporterMetrics}</div>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","export const platforms = [\n  {\n    platform: \"facebook\",\n    color: \"#4267B2\",\n    graphs: [\n      {\n        header: \"Posts\",\n        total: {\n          type: \"post_imported\",\n        },\n        averages: [\n          {\n            type: \"process_handle\",\n            text: \"Avg. Handles/h\",\n          },\n          {\n            type: \"post_imported\",\n            text: \"Avg. Posts/h\",\n          },\n        ],\n      },\n      /*{\n        header: \"Streams\",\n        total: {\n          type: \"stream_imported\",\n        },\n        averages: [\n          {\n            type: \"process_stream_handle\",\n            text: \"Avg. Channels/h\",\n          },\n          {\n            type: \"stream_imported\",\n            text: \"Avg. Streams/h\",\n          },\n        ],\n      },*/\n    ],\n  },\n  {\n    platform: \"instagram\",\n    color: \"#C13584\",\n    graphs: [\n      {\n        header: \"Posts\",\n        total: {\n          type: \"post_imported\",\n        },\n        averages: [\n          {\n            type: \"process_handle\",\n            text: \"Avg. Handles/h\",\n          },\n          {\n            type: \"post_imported\",\n            text: \"Avg. Posts/h\",\n          },\n        ],\n      },\n      {\n        header: \"Stories\",\n        total: {\n          type: \"story_created\",\n        },\n        averages: [\n          {\n            type: \"process_story_handle\",\n            text: \"Avg. Handles/h\",\n          },\n          {\n            type: \"story_created\",\n            text: \"Avg. Stories/h\",\n          },\n        ],\n      },\n    ],\n  },\n  {\n    platform: \"twitch\",\n    color: \"#6441a5\",\n    graphs: [\n      {\n        header: \"Clips\",\n        total: {\n          type: \"post_imported\",\n        },\n        averages: [\n          {\n            type: \"process_handle\",\n            text: \"Avg. Handles/h\",\n          },\n          {\n            type: \"post_imported\",\n            text: \"Avg. Clips/h\",\n          },\n        ],\n      },\n      /*{\n        header: \"Streams\",\n        total: {\n          type: \"stream_imported\",\n        },\n        averages: [\n          {\n            type: \"process_stream_handle\",\n            text: \"Avg. Channels/h\",\n          },\n          {\n            type: \"stream_imported\",\n            text: \"Avg. Streams/h\",\n          },\n        ],\n      },*/\n    ],\n  },\n  {\n    platform: \"twitter\",\n    color: \"#1DA1F2\",\n    graphs: [\n      {\n        header: \"Posts\",\n        total: {\n          type: \"post_imported\",\n        },\n        averages: [\n          {\n            type: \"process_handle\",\n            text: \"Avg. Handles/h\",\n          },\n          {\n            type: \"post_imported\",\n            text: \"Avg. Posts/h\",\n          },\n        ],\n      },\n      {\n        header: \"Metrics\",\n        total: {\n          type: \"post_metric_imported\",\n        },\n        averages: [\n          {\n            type: \"process_metric_handle\",\n            text: \"Avg. Handles/h\",\n          },\n          {\n            type: \"post_metric_imported\",\n            text: \"Avg. Posts/h\",\n          },\n        ],\n      },\n    ],\n  },\n  {\n    platform: \"youtube\",\n    color: \"#FF0000\",\n    graphs: [\n      {\n        header: \"Videos\",\n        total: {\n          type: \"post_imported\",\n        },\n        averages: [\n          {\n            type: \"process_handle\",\n            text: \"Avg. Channels/h\",\n          },\n          {\n            type: \"post_imported\",\n            text: \"Avg. Videos/h\",\n          },\n        ],\n      },\n      /*{\n        header: \"Streams\",\n        total: {\n          type: \"stream_imported\",\n        },\n        averages: [\n          {\n            type: \"process_stream_handle\",\n            text: \"Avg. Channels/h\",\n          },\n          {\n            type: \"stream_imported\",\n            text: \"Avg. Streams/h\",\n          },\n        ],\n      },*/\n    ],\n  },\n  /*{\n    platform: \"trovo\",\n    color: \"#FF0000\",\n    graphs: [\n      {\n        header: \"Streams\",\n        total: {\n          type: \"stream_imported\",\n        },\n        averages: [\n          {\n            type: \"process_stream_handle\",\n            text: \"Avg. Channels/h\",\n          },\n          {\n            type: \"stream_imported\",\n            text: \"Avg. Streams/h\",\n          },\n        ],\n      },\n      {\n        header: \"Clips?!?\",\n        total: {\n          type: \"post_imported\",\n        },\n        averages: [\n          {\n            type: \"process_handle\",\n            text: \"Avg. Channels/h\",\n          },\n          {\n            type: \"post_imported\",\n            text: \"Avg. Clips/h/h\",\n          },\n        ],\n      },\n    ],\n  },*/\n];\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}