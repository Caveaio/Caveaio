{"version":3,"sources":["components/loader/pacMan.jsx","components/counters/TextCounter.jsx","config/Settings.js","components/graphs/importers/Average.jsx","components/text/importers/Averages.jsx","components/graphs/importers/LineGraph.jsx","helpers/reverseCalcDates.js","components/graphs/importers/Runtime.jsx","components/text/importers/Runtimes.jsx","components/graphs/ImportGraphs.jsx","components/ImportMetrics.jsx","components/graphs/ai/AIDownloadFailed.jsx","components/graphs/AIStackedGraphs.jsx","components/text/ai/LatestLog.jsx","components/text/AIText.jsx","components/text/ai/DownloadFinished.jsx","components/text/ai/DownloadStarted.jsx","components/text/ai/AIStartedPerBox.jsx","components/text/AInums.jsx","components/AIMetrics.jsx","components/graphs/ai/AIDetections.jsx","components/graphs/TypeStackedGraphs.jsx","components/AiTypes.jsx","components/text/ai/AIStarted.jsx","components/text/ai/DownloadPending.jsx","App.jsx","config/Importers.js","config/AI.js","config/typeOfContent.js","reportWebVitals.js","index.js"],"names":["PacMan","className","type","size","active","TextCounter","props","text","data","config","Average","platform","state","loading","error","getAverage","bind","this","updateMetric","setInterval","clearInterval","url","endpoint","includes","axios","get","params","then","response","avg","setState","catch","Component","Averages","useState","averages","map","average","index","LineGraph","severity","getTotalImports","logs","i","results","reverse_api_result","now","Date","get_date","date","dayjs","format","count","errors","push","setDate","getDate","reverse","reverseCalcDates","x","y","parseInt","z","ResponsiveContainer","width","height","LineChart","XAxis","dataKey","stroke","tick","YAxis","Tooltip","Line","name","color","strokeWidth","Runtime","platformOverride","getRuntime","e","barHeight","style","position","background","display","alignItems","runtime","right","top","backgroundColor","zIndex","paddingLeft","sleep_time","philipMethod","Runtimes","runtimes","ImportGraphs","graphs","graph","header","total","ImportMetrics","id","AIDownloadFailed","boxName","getLogs","BarChart","Bar","stackId","fill","colors","AIStackedGraphs","subTitle","LatestLog","aibox_id","getLatestLog","activity","sub_activity","timestamp","AIText","DownloadFinished","getDownloadFinished","DownloadStarted","getDownloadStarted","activeItems","fontWeight","AIStartedPerBox","max","getAIStartedPerBox","maxValue","AINums","ai_detections","stacked","detections","ai_text","ai_nums","AIMetrics","AIDetections","TypeStackedGraphs","AIStarted","getAiStarted","DownloadPending","getDownloadPending","loadImporterMetrics","key","loadAIMetrics","bar","ai","loadTypes","source_type","AiTypes","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30d11b9f.chunk.js","sourcesContent":["import React from \"react\";\nimport Loader from \"react-loaders\";\n\nfunction PacMan() {\n  return (\n    <div className=\"h-40 flex justify-center items-center\">\n      <Loader type=\"pacman\" size={\"custom\"} active />\n    </div>\n  );\n}\n\nexport default PacMan;\n","import React from \"react\"\n\nconst TextCounter = (props) => {\n  return (\n    <p className=\"text-left text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\n      {props.text}: {props.data}\n    </p>\n  )\n}\n\nexport default TextCounter\n","export const config = {\n  updateInterval: 60_000, // In milliseconds\n  logUrl: \"https://api-test-php.cavea.io\",\n  spiUrl: \"https://spi.cavea.io\",\n  testUrl: \"http://localhost:5000\",\n  localUrl: \"http://127.0.0.1:8000\",\n  graphHeight: 120,\n}\n","import React, { Component } from \"react\"\nimport PacMan from \"../../loader/pacMan\"\nimport axios from \"axios\"\nimport TextCounter from \"../../counters/TextCounter\"\nimport { config } from \"../../../config/Settings\"\n\nclass Average extends Component {\n  constructor(props) {\n    super(props)\n    this.platform = this.props.platform\n    this.type = this.props.type\n    this.state = {\n      data: null,\n      loading: true,\n      error: false,\n    }\n    this.getAverage = this.getAverage.bind(this)\n  }\n\n  componentDidMount() {\n    this.getAverage()\n\n    this.updateMetric = setInterval(this.getAverage, config.updateInterval)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.updateMetric)\n  }\n\n  getAverage() {\n    let endpoint = \"average\",\n      url\n    if (this.type.includes(\"_count\")) endpoint = \"aph\"\n\n    url = `${config.logUrl}/api/logs/import/${endpoint}`\n\n    axios\n      .get(`${url}`, {\n        params: {\n          platform: this.platform,\n          type: this.type,\n        },\n      })\n      .then((response) => {\n        const { avg } = response.data\n        this.setState({ data: avg, loading: false, error: false })\n      })\n      .catch(() => {\n        return this.setState({ error: true, loading: false })\n      })\n  }\n\n  render() {\n    if (this.state.data && !this.state.error && !this.state.loading) {\n      return <TextCounter data={this.state.data} text={this.props.text} />\n    } else if (this.state.error) {\n      return (\n        <p className=\"text-center text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\n          An Error Occurred!\n        </p>\n      )\n    } else {\n      return <PacMan />\n    }\n  }\n}\n\nexport default Average\n","import React, { useState } from \"react\"\nimport Average from \"../../graphs/importers/Average\"\n\nfunction Averages(props) {\n  const [averages] = useState([...props.data])\n  return (\n    <>\n      {averages.map((average, index) => {\n        return (\n          <Average\n            key={\"average-\" + index}\n            platform={props.platform}\n            type={average.type}\n            text={average.text}\n          />\n        )\n      })}\n    </>\n  )\n}\n\nexport default Averages\n","import React, { Component } from \"react\"\nimport PacMan from \"../../loader/pacMan\"\nimport axios from \"axios\"\nimport {\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\"\nimport { config } from \"../../../config/Settings\"\nimport dayjs from \"dayjs\"\nimport { reverseCalcDates } from \"../../../helpers/reverseCalcDates\"\n\nclass LineGraph extends Component {\n  constructor(props) {\n    super(props)\n    this.platform = this.props.platform\n    this.type = this.props.type\n    this.severity = this.props.severity\n    this.state = {\n      data: null,\n      loading: true,\n      error: null,\n    }\n    this.getTotalImports = this.getTotalImports.bind(this)\n  }\n\n  componentDidMount() {\n    this.getTotalImports()\n    this.updateMetric = setInterval(this.getTotalImports, config.updateInterval)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.updateMetric)\n  }\n\n  getTotalImports() {\n    axios\n      .get(`${config.logUrl}/api/logs/import/csbd`, {\n        params: {\n          platform: this.platform,\n          type: this.type,\n          severity: this.severity,\n        },\n      })\n      .then((response) => {\n        const reverse_result = reverseCalcDates(response.data)\n        const logs = reverse_result.map((data) => {\n          return {\n            x: dayjs(data.date).format(\"YYYY-MM-DD\"),\n            y: parseInt(data.count),\n            z: parseInt(data.errors),\n          }\n        })\n\n        this.setState({ data: logs, loading: false, error: false })\n      })\n      .catch(() => {\n        return this.setState({ error: true, loading: false })\n      })\n  }\n\n  render() {\n    if (this.state.data && !this.state.error && !this.state.loading) {\n      return (\n        <ResponsiveContainer width=\"100%\" height={config.graphHeight}>\n          <LineChart data={this.state.data}>\n            <XAxis dataKey=\"x\" stroke=\"#222\" tick={false} />\n            <YAxis  stroke=\"#222\" />\n            <Tooltip />\n            <Line\n              dataKey=\"y\"\n              name=\"Count\"\n              stroke={this.props.color}\n              strokeWidth={5}\n            />\n            <Line dataKey=\"z\" name=\"Errors\" stroke=\"darkred\" strokeWidth={2} />\n          </LineChart>\n        </ResponsiveContainer>\n      )\n    } else if (this.state.error) {\n      return (\n        <p className=\"text-center text-gray-900 dark:text-gray-200\">\n          An Error Occurred!\n        </p>\n      )\n    } else {\n      return <PacMan />\n    }\n  }\n}\n\nexport default LineGraph\n","import dayjs from \"dayjs\"\n\nexport function reverseCalcDates(data) {\n  let i,\n    results = [],\n    reverse_api_result = {}\n  let now = new Date()\n  let targetDays = 30\n  const get_date = (date) => {\n    return dayjs(date).format(\"YYYY-MM-DD\")\n  }\n\n  data.map((data) => {\n    return (reverse_api_result[data.date] = { count: data.count, errors: data.errors })\n  })\n\n  for (i = targetDays; i > 0; --i) {\n    results.push({\n      date: get_date(now),\n      count: reverse_api_result[get_date(now)][\"count\"] || 0,\n      errors: reverse_api_result[get_date(now)][\"errors\"] || 0,\n    })\n\n    now.setDate(now.getDate() - 1)\n  }\n\n\n  return results.reverse()\n}\n","import React, { Component } from \"react\"\nimport PacMan from \"../../loader/pacMan\"\nimport axios from \"axios\"\nimport { config } from \"../../../config/Settings\"\n\nclass Runtime extends Component {\n  constructor(props) {\n    super(props)\n    this.platform = this.props.platform\n    this.platformOverride = this.props.platformOverride || null\n    this.type = this.props.type\n    this.state = {\n      data: null,\n      loading: true,\n      error: null,\n    }\n    this.getRuntime = this.getRuntime.bind(this)\n  }\n\n  componentDidMount() {\n    this.getRuntime()\n\n    this.updateMetric = setInterval(this.getRuntime, config.updateInterval)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.updateMetric)\n  }\n\n  getRuntime() {\n    axios\n      .get(`${config.logUrl}/api/logs/import/runtime`, {\n        params: {\n          platform: this.platformOverride || this.platform,\n          type: this.type,\n        },\n      })\n      .then((response) => {\n        this.setState({ data: response.data, loading: false, error: false })\n      })\n      .catch((e) => {\n        return this.setState({ error: e, loading: false })\n      })\n  }\n\n  philipMethod() {\n    const barHeight = \"20px\"\n\n    return (\n      <div\n        className=\"health_container\"\n        style={{\n          width: \"100px\",\n          height: barHeight,\n          position: \"relative\",\n          background:\n            \"linear-gradient(90deg, rgba(255,0,0,1) 0%, rgba(255,255,0,1) 25%, rgba(26,255,0,1) 100%)\",\n          display: \"flex\",\n          alignItems: \"center\",\n        }}\n      >\n        <div\n          className=\"health_bar\"\n          style={{\n            height: barHeight,\n            width: `${this.state.data.runtime}%`,\n            position: \"absolute\",\n            right: 0,\n            top: 0,\n            backgroundColor: \"lightgrey\",\n            zIndex: 1,\n          }}\n        />\n        \n        <p\n          className=\"subpixel-antialiased\"\n          style={{ zIndex: 2, paddingLeft: \"20px\", color: \"rebeccapurple\" }}\n        >\n          {this.state.data.sleep_time}%\n        </p>\n      </div>\n    )\n  }\n\n  render() {\n    if (this.state.data && !this.state.error && !this.state.loading) {\n      return this.philipMethod()\n    } else if (this.state.error) {\n      return (\n        <p className=\"text-center text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\n          An Error Occurred!\n        </p>\n      )\n    } else {\n      return <PacMan />\n    }\n  }\n}\n\nexport default Runtime\n","import React, { useState } from \"react\"\nimport Runtime from \"../../graphs/importers/Runtime\"\n\nfunction Runtimes(props) {\n  const [runtimes] = useState([...props.data])\n  return (\n    <>\n      {runtimes.map((runtime, index) => {\n        return (\n          <Runtime\n            key={\"runtime-\" + index}\n            platform={props.platform}\n            type={runtime.type}\n            text={runtime.text}\n            platformOverride={runtime.platformOverride}\n          />\n        )\n      })}\n    </>\n  )\n}\n\nexport default Runtimes\n","import React, { useState } from \"react\"\nimport Averages from \"../text/importers/Averages\"\nimport LineGraph from \"./importers/LineGraph\"\nimport Runtimes from \"../text/importers/Runtimes\"\n\nfunction ImportGraphs(props) {\n  const [graphs] = useState([...props.graphs])\n\n  return graphs.map((graph, index) => {\n    return (\n      <div\n        className=\"metric grid grid-cols-9\"\n        key={graph.platform + graph.header + index}\n      >\n        <div className=\"metric-header grid grid-flow-row-dense auto-rows-min col-span-2\">\n          <div className=\"grid grid-flow-col items-center\">\n            <h2 className=\"text-left font-semibold text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\n              {graph.header}\n            </h2>\n            <Runtimes data={graph.runtime} platform={props.platform} />\n          </div>\n          <Averages data={graph.averages} platform={props.platform} />\n        </div>\n        <div className=\"col-span-7 grid-flow-row-dense\">\n          <LineGraph\n            platform={props.platform}\n            color={props.color}\n            type={graph.total.type}\n            severity={graph.total.severity}\n            width={200}\n            height={120}\n          />\n        </div>\n      </div>\n    )\n  })\n}\n\nexport default ImportGraphs\n","import React from \"react\"\nimport ImportGraphs from \"./graphs/ImportGraphs\"\n\nfunction ImportMetrics(props) {\n  return (\n    <div id={props.platform + \"-metric\"} className=\"grid\">\n      <h2 className=\"capitalize text-left font-bold text-3xl text-gray-900 dark:text-gray-200 subpixel-antialiased\">\n        {props.platform} \n      </h2>\n      <ImportGraphs\n        graphs={props.graphs}\n        platform={props.platform}\n        color={props.color}\n      />\n    </div>\n  )\n}\n\nexport default ImportMetrics\n","import React, { Component } from \"react\"\nimport PacMan from \"../../loader/pacMan\"\nimport axios from \"axios\"\nimport {\n  Bar,\n  BarChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\"\nimport { config } from \"../../../config/Settings\"\n\nclass AIDownloadFailed extends Component {\n  constructor(props) {\n    super(props)\n    this.boxName = this.props.boxName\n    this.params = this.props.params\n    this.state = {\n      data: null,\n      loading: true,\n      error: null,\n    }\n    this.getLogs = this.getLogs.bind(this)\n  }\n\n  componentDidMount() {\n    this.getLogs()\n\n    this.updateMetric = setInterval(this.getLogs, config.updateInterval)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.updateMetric)\n  }\n\n  getLogs() {\n    axios\n      .get(`${config.logUrl}/api/logs/ai/get_downloads`, {\n        params: this.params,\n      })\n      .then((response) => {\n        this.setState({ data: response.data, loading: false, error: false })\n      })\n      .catch(() => {\n        return this.setState({ error: true, loading: false })\n      })\n  }\n  \n  render() {\n    if (this.state.data && !this.state.error && !this.state.loading) {\n      return (\n        <ResponsiveContainer width=\"100%\" height={config.graphHeight}>\n          <BarChart data={this.state.data}>\n            <XAxis dataKey=\"date\" stroke=\"#222\" tick={false} />\n            <YAxis />\n            <Tooltip />\n            <Bar\n              dataKey=\"aibox1\"\n              name=\"aibox1\"\n              stackId=\"a\"\n              fill={this.props.colors}\n            />\n            <Bar\n              dataKey=\"aibox2\"\n              name=\"aibox2\"\n              stackId=\"a\"\n              fill={this.props.colors}\n            />\n            <Bar\n              dataKey=\"aibox3\"\n              name=\"aibox3\"\n              stackId=\"a\"\n              fill={this.props.colors}\n            />\n            <Bar\n              dataKey=\"aibox4\"\n              name=\"aibox4\"\n              stackId=\"a\"\n              fill={this.props.colors}\n            />\n          </BarChart>\n        </ResponsiveContainer>\n      )\n    } else if (this.state.error) {\n      return (\n        <p className=\"text-center text-gray-900 dark:text-gray-200\">\n          An Error Occurred!\n        </p>\n      )\n    } else {\n      return <PacMan />\n    }\n  }\n}\n\nexport default AIDownloadFailed\n","import React, { useState } from \"react\"\nimport AIDownloadFailed from './ai/AIDownloadFailed'\n\nfunction AIStackedGraphs(props) {\n  const [stackedGraphs] = useState([...props.graphs])\n\n\n  return stackedGraphs.map((graph, index) => {\n    return (\n      <div\n        className=\"metric grid col-span-full\"\n        key={graph.subTitle + \"-\" + index}\n      >\n        <div className=\"metric-header grid grid-flow-row auto-rows-max\">\n          <h2 className=\"capitalize text-left font-bold text-xl text-gray-900 dark:text-gray-200 subpixel-antialiased\">\n            {graph.subTitle}\n          </h2>\n        </div>\n        <div className=\"col-span-7\">\n          <AIDownloadFailed {...graph} />\n        </div>\n      </div>\n    )\n  })\n}\n\nexport default AIStackedGraphs\n","import React, { Component } from \"react\"\nimport PacMan from \"../../loader/pacMan\"\nimport axios from \"axios\"\nimport { config } from \"../../../config/Settings\"\n\nclass LatestLog extends Component {\n  constructor(props) {\n    super(props)\n    this.aibox_id = this.props.params.aibox_id\n    this.state = {\n      data: null,\n      loading: true,\n      error: null,\n    }\n    this.getLatestLog = this.getLatestLog.bind(this)\n  }\n\n  componentDidMount() {\n    this.getLatestLog()\n\n    this.updateMetric = setInterval(this.getLatestLog, 10_000)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.updateMetric)\n  }\n\n  getLatestLog() {\n    axios\n      .get(`${config.logUrl}/api/logs/ai/latest_log`, {\n        params: {\n          aibox_id: this.aibox_id,\n        },\n      })\n      .then((response) => {\n        this.setState({\n          data: response.data || \"0\",\n          loading: false,\n          error: false,\n        })\n      })\n      .catch((e) => {\n        return this.setState({ error: e, loading: false })\n      })\n  }\n\n  render() {\n    if (this.state.data && !this.state.error && !this.state.loading) {\n      return (\n        <code>\n          <p>\n            {this.state.data.activity} / {this.state.data.sub_activity} /{\" \"}\n            {this.state.data.timestamp}\n          </p>\n        </code>\n      )\n    } else if (this.state.error) {\n      return (\n        <p className=\"text-center text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\n          An Error Occurred!\n        </p>\n      )\n    } else {\n      return <PacMan />\n    }\n  }\n}\n\nexport default LatestLog\n","import React, { useState } from \"react\"\nimport LatestLog from \"./ai/LatestLog\"\n\nfunction AIText(props) {\n  const [content] = useState([...props.text])\n\n  return content.map((text, index) => {\n    return (\n      <div\n        className=\"metric grid grid-cols-10\"\n        key={text.subTitle + \"-\" + index}\n      >\n        <div className=\"metric-header grid grid-flow-row auto-rows-min col-span-2\">\n          <h2 className=\"text-left font-semibold text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\n            {text.subTitle}\n          </h2>\n        </div>\n        <div className=\"col-span-8 gap-y-2 justify-self-center\">\n          <LatestLog {...text} />\n        </div>\n      </div>\n    )\n  })\n}\n\nexport default AIText\n","import React, { Component } from \"react\"\nimport PacMan from \"../../loader/pacMan\"\nimport axios from \"axios\"\nimport { config } from \"../../../config/Settings\"\n\nclass DownloadFinished extends Component {\n  constructor(props) {\n    super(props)\n    this.aibox_id = this.props.params.aibox_id\n    this.state = {\n      data: null,\n      loading: true,\n      error: null,\n    }\n    this.getDownloadFinished = this.getDownloadFinished.bind(this)\n  }\n\n  componentDidMount() {\n    this.getDownloadFinished()\n\n    this.updateMetric = setInterval(\n      this.getDownloadFinished,\n      config.updateInterval\n    )\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.updateMetric)\n  }\n\n  getDownloadFinished() {\n    axios\n      .get(\n        `${config.spiUrl}/ai/que/count?filter=%7B%22state%22:%20%22download-finished%22,%22aibox_id%22:%22${this.aibox_id}%22%7D&limit=9999999`\n      )\n      .then((response) => {\n        this.setState({ data: response.data || \"0\", loading: false, error: false })\n      })\n      .catch((e) => {\n        return this.setState({ error: e, loading: false })\n      })\n  }\n\n  render() {  \n    if (this.state.data && !this.state.error && !this.state.loading) {\n      return (\n        <code className=\"text-center text-gray-900 dark:text-gray-200 flex-col content-end subpixel-antialiased\">\n        <p> Dl-finished:</p> <p> {this.state.data} </p>\n      </code>\n      )\n    } else if (this.state.error) {\n      return (\n        <p className=\"text-center text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\n          An Error Occurred!\n        </p>\n      )\n    } else {\n      return <PacMan />\n    }\n  }\n}\n\nexport default DownloadFinished\n","import React, { Component } from \"react\"\nimport PacMan from \"../../loader/pacMan\"\nimport axios from \"axios\"\nimport { config } from \"../../../config/Settings\"\n\nclass DownloadStarted extends Component {\n  constructor(props) {\n    super(props)\n    this.aibox_id = this.props.params.aibox_id\n    this.state = {\n      data: null,\n      loading: true,\n      error: null,\n    }\n    this.getDownloadStarted = this.getDownloadStarted.bind(this)\n  }\n\n  componentDidMount() {\n    this.getDownloadStarted()\n\n    this.updateMetric = setInterval(\n      this.getDownloadStarted,\n      config.updateInterval\n    )\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.updateMetric)\n  }\n\n  getDownloadStarted() {\n    axios\n      .get(\n        `${config.spiUrl}/ai/que/count?filter=%7B%22state%22:%20%22download-started%22,%22aibox_id%22:%22${this.aibox_id}%22%7D&limit=9999999`\n      )\n      .then((response) => {\n        this.setState({ data: response.data || \"0\", loading: false, error: false })\n      })\n      .catch((e) => {\n        return this.setState({ error: e, loading: false })\n      })\n  }\n\n  activeItems() {\n    const activeItems = this.state.data\n    if (activeItems > 8) {\n      return {\n        backgroundColor: \"#F50010\",\n        color: \"white\",\n        fontWeight: 900,\n      }\n    } \n  }\n\n  render() {  \n    if (this.state.data && !this.state.error && !this.state.loading) {\n      return (\n        <code className=\"text-center text-gray-900 dark:text-gray-200 flex-col content-end subpixel-antialiased\">\n          <p> Dl-started:</p> <p style={this.activeItems()}> {this.state.data} </p>\n        </code>\n      )\n    } else if (this.state.error) {\n      return (\n        <p className=\"text-center text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\n          An Error Occurred!\n        </p>\n      )\n    } else {\n      return <PacMan />\n    }\n  }\n}\n\nexport default DownloadStarted\n","import React, { Component } from \"react\"\nimport PacMan from \"../../loader/pacMan\"\nimport axios from \"axios\"\nimport { config } from \"../../../config/Settings\"\n\nclass AIStartedPerBox extends Component {\n  constructor(props) {\n    super(props)\n    this.aibox_id = this.props.params.aibox_id\n    this.state = {\n      data: null,\n      loading: true,\n      error: null,\n    }\n    this.max = \"\"\n   \n    this.getAIStartedPerBox = this.getAIStartedPerBox.bind(this)\n  }\n\n  componentDidMount() {\n    this.getAIStartedPerBox()\n\n    this.updateMetric = setInterval(this.getAIStartedPerBox, config.updateInterval)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.updateMetric)\n  }\n\n  getAIStartedPerBox() {\n    axios\n      .get(\n        `${config.spiUrl}/ai/que/count?filter=%7B%22state%22:%20%22ai-started%22,%22aibox_id%22:%22${this.aibox_id}%22%7D&limit=9999999`\n      )\n      .then((response) => {\n        this.setState({ data: response.data || \"0\", loading: false, error: false })\n      })\n      .catch((e) => {\n        return this.setState({ error: e, loading: false })\n      })\n  }\n  activeItems(id) {\n    let maxValue = 121213;\n    switch(id){\n      case \"aibox1\":\n        maxValue = 5;\n        break;\n      case \"aibox2\":\n        maxValue = 5;\n        break;\n      case \"aibox3\":\n        maxValue = 3;\n          break;\n      case \"aibox4\":\n        maxValue = 2;\n          break;\n      default:\n        maxValue = 0;\n        break;\n    }\n\n    const activeItems = this.state.data\n    if (activeItems > maxValue) {\n      return {\n        backgroundColor: \"#F50010\",\n        color: \"white\",\n        fontWeight: 900,\n      }\n    }\n  }\n\n  render() {\n    if (this.state.data && !this.state.error && !this.state.loading) {\n      return (\n\n        <h1 className=\"text-center text-gray-900 dark:text-gray-200 flex-col content-end subpixel-antialiased\">\n          <p> AI-started:</p> <p style={this.activeItems(this.aibox_id)}> {this.state.data} </p>\n        </h1>\n\n      )\n    } else if (this.state.error) {\n      return (\n        <p className=\"text-center text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\n          An Error Occurred!\n        </p>\n      )\n    } else {\n      return <PacMan />\n    }\n  }\n}\n\nexport default AIStartedPerBox\n","import React, { useState } from \"react\"\nimport DownloadFinished from \"./ai/DownloadFinished\";\nimport DownloadStarted from \"./ai/DownloadStarted\";\nimport AIStartedPerBox from \"./ai/AIStartedPerBox\";\n\n\nfunction AINums(props) {\n  const [content] = useState([...props.text])\n\n  return content.map((text, index) => {\n    return (\n      <div\n        className=\"metric grid grid-cols-10\"\n        key={text.subTitle + \"-\" + index}\n      >\n        <div className=\"metric-header grid grid-flow-row auto-rows-min col-span-2\">\n          <h2 className=\"text-left font-semibold text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\n            Status\n          </h2>\n        </div>\n        <div className=\"col-span-8 gap-y-2 grid grid-cols-3 grid-flow-col justify-center content-end\">\n          <DownloadStarted {...text} />\n          <DownloadFinished {...text} />\n          <AIStartedPerBox {...text} />\n        </div>\n      </div>\n    )\n  })\n}\n\nexport default AINums","import React from \"react\"\n/* import AIBarGraphs from \"./graphs/AIBarGraphs\" */\nimport AIStackedGraphs from \"./graphs/AIStackedGraphs\"\nimport AIText from \"./text/AIText\"\nimport AINums from \"./text/AInums\"\n\n/* function ai_bar_graph(props) {\n  if (props.graphs.bar) {\n    return <AIBarGraphs graphs={props.graphs.bar} />\n  }\n} */\n\nfunction ai_detections(props) {\n  if (props.graphs.stacked.detections) {\n    return <AIStackedGraphs graphs={props.graphs.stacked.detections} />\n  }\n}\n\nfunction ai_text(props) {\n  if (props.text) {\n    return <AIText text={props.text} />\n  }\n}\n\nfunction ai_nums(props) {\n  if (props.text) {\n    return <AINums text={props.text} />\n  }\n}\n\nfunction AIMetrics(props) {\n  return (\n    <div id={props.boxName + \"-metric\"} className=\"grid gap-y-1 m-2\">\n      \n      <div className=\"grid grid-cols-1\">\n        {ai_detections(props)} \n      </div>\n\n      <h2 className=\"capitalize text-left font-bold text-3xl text-gray-900 dark:text-gray-200 subpixel-antialiased\">\n        {props.boxName}\n      </h2>\n\n      <div className=\"grid\">{ai_nums(props)}\n      </div>\n      <div className=\"grid\">{ai_text(props)}\n      </div>\n    </div>\n  )\n}\n\nexport default AIMetrics\n","import React, { Component } from \"react\"\nimport PacMan from \"../../loader/pacMan\"\nimport axios from \"axios\"\nimport {\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\"\nimport { config } from \"../../../config/Settings\"\nimport dayjs from \"dayjs\"\n\n\nclass AIDetections extends Component {\n  constructor(props) {\n    super(props)\n    this.boxName = this.props.boxName\n    this.params = this.props.params\n    this.state = {\n      data: null,\n      loading: true,\n      error: null,\n    }\n    this.getLogs = this.getLogs.bind(this)\n  }\n\n  componentDidMount() {\n    this.getLogs()\n\n    this.updateMetric = setInterval(this.getLogs, config.updateInterval)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.updateMetric)\n  }\n\n  getLogs() {\n    axios\n      .get(`${config.logUrl}/api/logs/ai/get_image_video`, {\n        params: this.params,\n      })\n      .then((response) => {\n  \n        const reverse_result = response.data;\n        const logs = reverse_result.map((data) => {\n          return {\n            x: dayjs(data.date).format(\"YYYY-MM-DD\"),\n            y: parseInt(data.count),\n          }\n        })\n        this.setState({ data: logs, loading: false, error: false })\n      })\n      .catch(() => {\n        return this.setState({ error: true, loading: false })\n      })\n  }\n\n \n\n  render() {\n    if (this.state.data && !this.state.error && !this.state.loading) {\n      return (\n        <ResponsiveContainer width=\"100%\" height={config.graphHeight}>\n          <LineChart data={this.state.data}>\n            <XAxis dataKey=\"x\" stroke=\"#222\" tick={false} />\n            <YAxis dataKey=\"y\" stroke=\"#222\" />\n            <Tooltip />\n            <Line\n              dataKey=\"y\"\n              name=\"count\"\n              stroke={this.props.color}\n              strokeWidth={5}\n            />\n          </LineChart>\n        </ResponsiveContainer>\n\n        \n      )\n    } else if (this.state.error) {\n      return (\n        <p className=\"text-center text-gray-900 dark:text-gray-200\">\n          An Error Occurred!\n        </p>\n      )\n    } else {\n      return <PacMan />\n    }\n  }\n}\n\nexport default AIDetections\n","import React, { useState } from \"react\"\nimport AIDetections from './ai/AIDetections'\n\nfunction AIStackedGraphs(props) {\n  const [stackedGraphs] = useState([...props.graphs])\n\n\n  return stackedGraphs.map((graph, index) => {\n    return (\n      <div\n        className=\"metric grid col-span-full\"\n        key={graph.subTitle + \"-\" + index}\n      >\n        <div className=\"metric-header grid grid-flow-row auto-rows-max\">\n          <h2 className=\"capitalize text-left font-bold text-xl text-gray-900 dark:text-gray-200 subpixel-antialiased\">\n            {graph.subTitle}\n          </h2>\n        </div>\n        <div className=\"col-span-7\">\n          <AIDetections {...graph} />\n        </div>\n      </div>\n    )\n  })\n}\n\nexport default AIStackedGraphs\n","import React from \"react\"\nimport TypeStackedGraphs from \"./graphs/TypeStackedGraphs\"\n\nfunction ai_detections(props) {\n  if (props.graphs.stacked.detections) {\n    return <TypeStackedGraphs graphs={props.graphs.stacked.detections} />\n  }\n}\n\nfunction AIMetrics(props) {\n  return (\n    <div id={props.boxName + \"-metric\"} className=\"grid gap-y-1 m-2\">\n      \n      <div className=\"grid grid-cols-1\">\n        {ai_detections(props)}\n      </div>\n\n      <h2 className=\"capitalize text-left font-bold text-3xl text-gray-900 dark:text-gray-200 subpixel-antialiased\">\n        {props.boxName}\n      </h2>\n    </div>\n  )\n}\n\nexport default AIMetrics\n","import React, { Component } from \"react\"\nimport PacMan from \"../../loader/pacMan\"\nimport axios from \"axios\"\nimport { config } from \"../../../config/Settings\"\n\nclass AIStarted extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      data: null,\n      loading: true,\n      error: null,\n    }\n    this.getAiStarted = this.getAiStarted.bind(this)\n  }\n\n  componentDidMount() {\n    this.getAiStarted()\n\n    this.updateMetric = setInterval(this.getAiStarted, config.updateInterval)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.updateMetric)\n  }\n\n  getAiStarted() {\n    axios\n      .get(\n        `${config.spiUrl}/ai/que/count?filter={%22state%22:%20%22ai-started%22}`\n      )\n      .then((response) => {\n        this.setState({ data: response.data || \"0\", loading: false, error: false })\n      })\n      .catch((e) => {\n        return this.setState({ error: e, loading: false })\n      })\n  }\n\n  activeItems() {\n    const activeItems = this.state.data\n    if (activeItems > 13 && activeItems <= 17) {\n      return {\n        backgroundColor: \"#EEDD33\",\n        fontWeight: 900,\n      } \n    } else if (activeItems > 17) {\n      return {\n        backgroundColor: \"#F50010\",\n        color: \"white\",\n        fontWeight: 900,\n      }\n    }\n  }\n\n  render() {\n    if (this.state.data && !this.state.error && !this.state.loading) {\n      return (\n        <h1\n          style={this.activeItems()}\n          className=\"text-center text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\"\n        >\n          Num. Active Items: {this.state.data} \n        </h1>\n      )\n    } else if (this.state.error) {\n      return (\n        <p className=\"text-center text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\n          An Error Occurred!\n        </p>\n      )\n    } else {\n      return <PacMan />\n    }\n  }\n}\n\nexport default AIStarted\n","import React, { Component } from \"react\"\nimport PacMan from \"../../loader/pacMan\"\nimport axios from \"axios\"\nimport { config } from \"../../../config/Settings\"\n\nclass DownloadPending extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      data: null,\n      loading: true,\n      error: null,\n    }\n    this.getDownloadPending = this.getDownloadPending.bind(this)\n  }\n\n  componentDidMount() {\n    this.getDownloadPending()\n\n    this.updateMetric = setInterval(\n      this.getDownloadPending,\n      config.updateInterval\n    )\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.updateMetric)\n  }\n\n  getDownloadPending() {\n    axios\n      .get(\n        `${config.spiUrl}/ai/que/count?filter={%22state%22:%20%22download-pending%22}&limit=9999999`\n        \n      )\n      .then((response) => {\n        this.setState({ data: response.data || \"0\", loading: false, error: false })\n      })\n      .catch((e) => {\n        return this.setState({ error: e, loading: false })\n      })\n  }\n\n  render() {\n    if (this.state.data && !this.state.error && !this.state.loading) {\n      return (\n        <h1 className=\"text-center text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\n          Num. Pending Items: {this.state.data}\n        </h1>\n      )\n    } else if (this.state.error) {\n      return (\n        <p className=\"text-center text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\n          An Error Occurred!\n        </p>\n      )\n    } else {\n      return <PacMan />\n    }\n  }\n}\n\nexport default DownloadPending\n","import ImportMetrics from \"./components/ImportMetrics\"\nimport AIMetrics from \"./components/AIMetrics\"\nimport  AiTypes  from \"./components/AiTypes\"\nimport { importers } from \"./config/Importers\"\nimport { AI } from \"./config/AI\"\nimport { type } from \"./config/typeOfContent\"\nimport AIStarted from \"./components/text/ai/AIStarted\"\nimport DownloadPending from \"./components/text/ai/DownloadPending\"\n\nconst loadImporterMetrics = importers.map((platform) => {\n  return <ImportMetrics {...platform} key={platform.platform} />\n})\nconst loadAIMetrics = AI.map((ai) => {\n  return <AIMetrics {...ai} key={ai.boxName} />\n})\n\nconst loadTypes = type.map((type) => {\n  return <AiTypes {...type} key={type.boxName} />\n})\n\nconst App = () => (\n  <div className=\"p-5 mx-auto grid md:grid-cols-1 lg:grid-cols-2 gap-x-5\">\n    <div className=\"import-logs\">{loadImporterMetrics}</div>\n    <div className=\"ai-logs\">\n      <div className=\"grid grid-cols-2 grid-flow-col\">\n        <DownloadPending />\n        <AIStarted />\n      </div>\n      {loadAIMetrics}\n      {loadTypes}\n    </div>\n  </div>\n)\n\nexport default App\n","export const importers = [\n  {\n    platform: \"facebook\",\n    color: \"#4267B2\",\n    graphs: [\n      {\n        header: \"Posts\",\n        total: {\n          type: \"post_count\",\n          severity: \"ERROR\",\n        },\n        averages: [\n          {\n            type: \"process_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"post_count\",\n            text: \"P/h\",\n          },\n        ],\n        runtime: [\n          {\n            platformOverride: \"content-import\",\n            type: \"sleep_timer\",\n            text: \"Idle% = x / 1,44\",\n          },\n        ],\n      },\n      {\n        header: \"Live\",\n        total: {\n          type: \"streams_count\",\n          severity: \"ERROR\",\n        },\n        averages: [\n          {\n            type: \"process_stream_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"streams_count\",\n            text: \"S/h\",\n          },\n        ],\n        runtime: [],\n      },\n    ],\n  },\n  {\n    platform: \"instagram\",\n    color: \"#C13584\",\n    graphs: [\n      {\n        header: \"Posts\",\n        total: {\n          type: \"post_count\",\n          severity: \"ERROR\",\n        },\n        averages: [\n          {\n            type: \"process_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"post_count\",\n            text: \"P/h\",\n          },\n        ],\n        runtime: [\n          {\n            platformOverride: \"content-import\",\n            type: \"sleep_timer\",\n            text: \"Idle% = x / 1,44\",\n          },\n        ],\n      },\n      {\n        header: \"Stories\",\n        total: {\n          type: \"story_count\",\n          severity: \"ERROR\",\n        },\n        averages: [\n          {\n            type: \"process_story_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"story_count\",\n            text: \"S/h\",\n          },\n        ],\n        runtime: [],\n      },\n    ],\n  },\n  {\n    platform: \"twitch\",\n    color: \"#6441a5\",\n    graphs: [\n      {\n        header: \"Clips\",\n        total: {\n          type: \"post_count\",\n          severity: \"ERROR\",\n        },\n        averages: [\n          {\n            type: \"process_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"post_count\",\n            text: \"P/h\",\n          },\n        ],\n        runtime: [\n          {\n            type: \"sleep_timer\",\n            text: \"Idle% = x / 1,44\",\n          },\n        ],\n      },\n      {\n        header: \"Live\",\n        total: {\n          type: \"streams_count\",\n          severity: \"ERROR\",\n        },\n        averages: [\n          {\n            type: \"process_stream_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"streams_count\",\n            text: \"S/h\",\n          },\n        ],\n        runtime: [],\n      },\n    ],\n  },\n  {\n    platform: \"twitter\",\n    color: \"#1DA1F2\",\n    graphs: [\n      {\n        header: \"Posts\",\n        total: {\n          type: \"post_count\",\n          severity: \"ERROR\",\n        },\n        averages: [\n          {\n            type: \"process_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"post_count\",\n            text: \"P/h\",\n          },\n        ],\n        runtime: [\n          {\n            type: \"sleep_timer\",\n            text: \"Idle% = x / 1,44\",\n          },\n        ],\n      },\n      {\n        header: \"Metrics\",\n        total: {\n          type: \"post_metric_count\",\n          severity: \"ERROR\",\n        },\n        averages: [\n          {\n            type: \"process_metric_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"post_metric_count\",\n            text: \"P/h\",\n          },\n        ],\n        runtime: [],\n      },\n    ],\n  },\n  {\n    platform: \"youtube\",\n    color: \"#FF0000\",\n    graphs: [\n      {\n        header: \"Videos\",\n        total: {\n          type: \"post_count\",\n          severity: \"ERROR\",\n        },\n        averages: [\n          {\n            type: \"process_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"post_count\",\n            text: \"P/h\",\n          },\n        ],\n        runtime: [\n          {\n            type: \"sleep_timer\",\n            text: \"Idle% = x / 1,44\",\n          },\n        ],\n      },\n      {\n        header: \"Live\",\n        total: {\n          type: \"streams_count\",\n          severity: \"ERROR\",\n        },\n        averages: [\n          {\n            type: \"process_stream_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"streams_count\",\n            text: \"S/h\",\n          },\n        ],\n        runtime: [],\n      },\n    ],\n  },\n  {\n    platform: \"trovo\",\n    color: \"#32c27c\",\n    graphs: [\n      {\n        header: \"Live\",\n        total: {\n          type: \"streams_count\",\n          severity: \"ERROR\",\n        },\n        averages: [\n          {\n            type: \"process_stream_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"streams_count\",\n            text: \"S/h\",\n          },\n        ],\n        runtime: [],\n      },\n    ],\n  },\n  {\n    platform: \"Tiktok\",\n    color: \"#fe2c55\",\n    graphs: [\n      {\n        header: \"Live\",\n        total: {\n          type: \"streams_count\",\n          severity: \"ERROR\",\n        },\n        averages: [\n          {\n            type: \"process_stream_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"streams_count\",\n            text: \"S/h\",\n          },\n        ],\n        runtime: [],\n      },\n    ],\n  },\n]\n","export const AI = [\n  {\n    boxName: \"\",\n    graphs: {\n      stacked: {\n        detections: [\n          {\n            subTitle: \"Download Failed\",\n            colors: \"#fc0303\",\n            params: {\n              activity: \"DOWNLOADING\",\n              sub_activity: \"FAILED\",\n            },\n          },\n          {\n            subTitle: \"Download Finished\",\n            colors: \"#00bfff\",\n            params: {\n              activity: \"DOWNLOADING\",\n              sub_activity: \"FINISHED\",\n            },\n          },\n          {\n            subTitle: \"AI Failed\",\n            colors: \"#d9de00\",\n            params: {\n              activity: \"ANALYSIS\",\n              sub_activity: \"FAILED\",\n            },\n          },\n          {\n            subTitle: \"AI Detections Not Found\",\n            colors: \"#218200\",\n            params: {\n              activity: \"ANALYSIS\",\n              sub_activity: \"FINISHED_NOTFOUND\",\n            },\n          },\n          {\n            subTitle: \"AI Detections Found\",\n            colors: \"#40ff00\",\n            params: {\n              activity: \"ANALYSIS\",\n              sub_activity: \"FINISHED_FOUND\",\n            },\n          },\n        ],\n      },\n    },\n  },\n  {\n    boxName: \"AIBOX1\",\n    graphs: {\n      stacked: {\n        detections: [],\n      },\n      bar: [],\n    },\n    text: [{ subTitle: \"Latest Log\", params: { aibox_id: \"aibox1\" } }],\n  },\n  {\n    boxName: \"AIBOX2\",\n    graphs: {\n      stacked: {\n        detections: [],\n      },\n      bar: [],\n    },\n    text: [{ subTitle: \"Latest Log\", params: { aibox_id: \"aibox2\" } }],\n  },\n  {\n    boxName: \"AIBOX3\",\n    graphs: {\n      stacked: {\n        detections: [],\n      },\n      bar: [],\n    },\n    text: [{ subTitle: \"Latest Log\", params: { aibox_id: \"aibox3\" } }],\n  },\n  {\n    boxName: \"AIBOX4\",\n    graphs: {\n      stacked: {\n        detections: [],\n      },\n      bar: [],\n    },\n    text: [{ subTitle: \"Latest Log\", params: { aibox_id: \"aibox4\" } }],\n  },\n]\n","export const type = [\n  {\n    boxName: \"\",\n    graphs: {\n      stacked: {\n        detections: [\n          {\n            subTitle: \"Videos\",\n            color: \"#065535\",\n            params: {\n              activity: \"DOWNLOADING\",\n              sub_activity: \"FINISHED\",\n              source_type: \"video\",\n            },\n          },\n          {\n            subTitle: \"Picture\",\n            color: \"#407294\",\n            params: {\n              activity: \"DOWNLOADING\",\n              sub_activity: \"FINISHED\",\n              source_type: \"picture\",\n            },\n          },\n        ],\n      },\n    },\n  },\n]\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}