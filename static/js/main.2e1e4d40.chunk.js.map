{"version":3,"sources":["components/loader/pacMan.jsx","components/counters/TextCounter.jsx","config/Settings.js","components/graphs/importers/Average.jsx","components/text/importers/Averages.jsx","helpers/reverseCalcDates.js","components/graphs/importers/LineGraph.jsx","components/graphs/importers/Runtime.jsx","components/text/importers/Runtimes.jsx","components/graphs/ImportGraphs.jsx","components/ImportMetrics.jsx","components/graphs/ai/AIBarGraph.jsx","components/graphs/AIBarGraphs.jsx","components/graphs/ai/AIDetections.jsx","components/graphs/AIStackedGraphs.jsx","components/text/ai/LatestLog.jsx","components/text/AIText.jsx","components/text/ai/DownloadFinished.jsx","components/text/ai/AIStartedPerBox.jsx","components/text/AInums.jsx","components/AIMetrics.jsx","components/text/ai/AIStarted.jsx","components/text/ai/DownloadPending.jsx","App.jsx","config/Importers.js","config/AI.js","reportWebVitals.js","index.js"],"names":["PacMan","className","type","size","active","TextCounter","props","text","data","config","Average","platform","state","loading","error","getAverage","bind","this","updateMetric","setInterval","clearInterval","url","endpoint","includes","axios","get","params","then","response","avg","setState","catch","Component","Averages","useState","averages","map","average","index","reverseCalcDates","i","results","reverse_api_result","now","Date","get_date","date","dayjs","format","count","push","setDate","getDate","reverse","LineGraph","getTotalImports","logs","x","y","parseInt","ResponsiveContainer","width","height","LineChart","XAxis","dataKey","stroke","tick","YAxis","Tooltip","Line","name","color","strokeWidth","Runtime","getRuntime","e","barHeight","style","position","background","display","alignItems","runtime","right","top","backgroundColor","zIndex","paddingLeft","sleep_time","philipMethod","Runtimes","runtimes","ImportGraphs","graphs","graph","header","total","ImportMetrics","id","AIBarGraph","boxName","getLogs","BarChart","Bar","fill","AIBarGraphs","subTitle","AIDetections","stackId","colors","AIStackedGraphs","LatestLog","aibox_id","getLatestLog","activity","sub_activity","timestamp","AIText","DownloadFinished","getDownloadFinished","length","AIStartedPerBox","max","getAIStartedPerBox","maxValue","activeItems","AINums","console","log","ai_bar_graph","bar","ai_detections","stacked","detections","ai_text","ai_nums","AIMetrics","AIStarted","getAiStarted","DownloadPending","getDownloadPending","loadImporterMetrics","key","loadAIMetrics","ai","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e1e4d40.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Loader from \"react-loaders\";\r\n\r\nfunction PacMan() {\r\n  return (\r\n    <div className=\"h-40 flex justify-center items-center\">\r\n      <Loader type=\"pacman\" size={\"custom\"} active />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PacMan;\r\n","import React from \"react\"\r\n\r\nconst TextCounter = (props) => {\r\n  return (\r\n    <p className=\"text-left text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\r\n      {props.text}: {props.data}\r\n    </p>\r\n  )\r\n}\r\n\r\nexport default TextCounter\r\n","export const config = {\r\n  updateInterval: 60_000,\r\n  logUrl: \"https://api-test-php.cavea.io\",\r\n  localUrl: \"http://127.0.0.1:8000\",\r\n  graphHeight: 120,\r\n}\r\n","import React, { Component } from \"react\"\r\nimport PacMan from \"../../loader/pacMan\"\r\nimport axios from \"axios\"\r\nimport TextCounter from \"../../counters/TextCounter\"\r\nimport { config } from \"../../../config/Settings\"\r\n\r\nclass Average extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.platform = this.props.platform\r\n    this.type = this.props.type\r\n    this.state = {\r\n      data: null,\r\n      loading: true,\r\n      error: false,\r\n    }\r\n    this.getAverage = this.getAverage.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAverage()\r\n\r\n    this.updateMetric = setInterval(this.getAverage, config.updateInterval)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.updateMetric)\r\n  }\r\n\r\n  getAverage() {\r\n    let endpoint = \"average\",\r\n      url\r\n    if (this.type.includes(\"_count\")) endpoint = \"aph\"\r\n\r\n    url = `${config.logUrl}/api/logs/import/${endpoint}`\r\n\r\n    axios\r\n      .get(`${url}`, {\r\n        params: {\r\n          platform: this.platform,\r\n          type: this.type,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const { avg } = response.data\r\n        this.setState({ data: avg, loading: false, error: false })\r\n      })\r\n      .catch(() => {\r\n        return this.setState({ error: true, loading: false })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.data && !this.state.error && !this.state.loading) {\r\n      return <TextCounter data={this.state.data} text={this.props.text} />\r\n    } else if (this.state.error) {\r\n      return (\r\n        <p className=\"text-center text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\r\n          An Error Occurred!\r\n        </p>\r\n      )\r\n    } else {\r\n      return <PacMan />\r\n    }\r\n  }\r\n}\r\n\r\nexport default Average\r\n","import React, { useState } from \"react\"\r\nimport Average from \"../../graphs/importers/Average\"\r\n\r\nfunction Averages(props) {\r\n  const [averages] = useState([...props.data])\r\n  return (\r\n    <>\r\n      {averages.map((average, index) => {\r\n        return (\r\n          <Average\r\n            key={\"average-\" + index}\r\n            platform={props.platform}\r\n            type={average.type}\r\n            text={average.text}\r\n          />\r\n        )\r\n      })}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Averages\r\n","import dayjs from \"dayjs\"\r\n\r\nexport function reverseCalcDates(data) {\r\n  let i,\r\n    results = [],\r\n    reverse_api_result = {}\r\n  let now = new Date()\r\n  let targetDays = 30\r\n  const get_date = (date) => {\r\n    return dayjs(date).format(\"YYYY-MM-DD\")\r\n  }\r\n\r\n  data.map((data) => {\r\n    return (reverse_api_result[data.date] = data.count)\r\n  })\r\n\r\n  for (i = targetDays; i > 0; --i) {\r\n    results.push({\r\n      date: get_date(now),\r\n      count: reverse_api_result[get_date(now)] || 0,\r\n    })\r\n\r\n    now.setDate(now.getDate() - 1)\r\n  }\r\n\r\n  return results.reverse()\r\n}\r\n","import React, { Component } from \"react\"\r\nimport PacMan from \"../../loader/pacMan\"\r\nimport axios from \"axios\"\r\nimport {\r\n  Line,\r\n  LineChart,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from \"recharts\"\r\nimport { config } from \"../../../config/Settings\"\r\nimport dayjs from \"dayjs\"\r\nimport { reverseCalcDates } from \"../../../helpers/reverseCalcDates\"\r\n\r\nclass LineGraph extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.platform = this.props.platform\r\n    this.type = this.props.type\r\n    this.state = {\r\n      data: null,\r\n      loading: true,\r\n      error: null,\r\n    }\r\n    this.getTotalImports = this.getTotalImports.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTotalImports()\r\n\r\n    this.updateMetric = setInterval(this.getTotalImports, config.updateInterval)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.updateMetric)\r\n  }\r\n\r\n  getTotalImports() {\r\n    axios\r\n      .get(`${config.logUrl}/api/logs/import/count_by_date`, {\r\n        params: {\r\n          platform: this.platform,\r\n          type: this.type,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const reverse_result = reverseCalcDates(response.data)\r\n        const logs = reverse_result.map((data) => {\r\n          return {\r\n            x: dayjs(data.date).format(\"YYYY-MM-DD\"),\r\n            y: parseInt(data.count),\r\n          }\r\n        })\r\n\r\n        this.setState({ data: logs, loading: false, error: false })\r\n      })\r\n      .catch(() => {\r\n        return this.setState({ error: true, loading: false })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.data && !this.state.error && !this.state.loading) {\r\n      return (\r\n        <ResponsiveContainer width=\"100%\" height={config.graphHeight}>\r\n          <LineChart data={this.state.data}>\r\n            <XAxis dataKey=\"x\" stroke=\"#222\" tick={false} />\r\n            <YAxis dataKey=\"y\" stroke=\"#222\" />\r\n            <Tooltip />\r\n            <Line\r\n              dataKey=\"y\"\r\n              name=\"Count\"\r\n              stroke={this.props.color}\r\n              strokeWidth={5}\r\n            />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      )\r\n    } else if (this.state.error) {\r\n      return (\r\n        <p className=\"text-center text-gray-900 dark:text-gray-200\">\r\n          An Error Occurred!\r\n        </p>\r\n      )\r\n    } else {\r\n      return <PacMan />\r\n    }\r\n  }\r\n}\r\n\r\nexport default LineGraph\r\n","import React, { Component } from \"react\"\r\nimport PacMan from \"../../loader/pacMan\"\r\nimport axios from \"axios\"\r\nimport { config } from \"../../../config/Settings\"\r\n\r\nclass Runtime extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.platform = this.props.platform\r\n    this.type = this.props.type\r\n    this.state = {\r\n      data: null,\r\n      loading: true,\r\n      error: null,\r\n    }\r\n    this.getRuntime = this.getRuntime.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getRuntime()\r\n\r\n    this.updateMetric = setInterval(this.getRuntime, config.updateInterval)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.updateMetric)\r\n  }\r\n\r\n  getRuntime() {\r\n    axios\r\n      .get(\r\n        `${config.logUrl}/api/logs/import/runtime`,\r\n        {\r\n          params: {\r\n            platform: this.platform,\r\n            type: this.type,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        this.setState({ data: response.data, loading: false, error: false })\r\n      })\r\n      .catch((e) => {\r\n        return this.setState({ error: e, loading: false })\r\n      })\r\n  }\r\n\r\n  philipMethod() {\r\n    const barHeight = \"20px\"\r\n\r\n    return (\r\n      <div\r\n        className=\"health_container\"\r\n        style={{\r\n          width: \"100px\",\r\n          height: barHeight,\r\n          position: \"relative\",\r\n          background:\r\n            \"linear-gradient(90deg, rgba(255,0,0,1) 0%, rgba(255,255,0,1) 25%, rgba(26,255,0,1) 100%)\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <div\r\n          className=\"health_bar\"\r\n          style={{\r\n            height: barHeight,\r\n            width: `${this.state.data.runtime}%`,\r\n            position: \"absolute\",\r\n            right: 0,\r\n            top: 0,\r\n            backgroundColor: \"lightgrey\",\r\n            zIndex: 1,\r\n          }}\r\n        />\r\n        <p\r\n          className=\"subpixel-antialiased\"\r\n          style={{ zIndex: 2, paddingLeft: \"20px\", color: \"rebeccapurple\" }}\r\n        >\r\n          {this.state.data.sleep_time}%\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    if (this.state.data && !this.state.error && !this.state.loading) {\r\n      return this.philipMethod()\r\n    } else if (this.state.error) {\r\n      return (\r\n        <p className=\"text-center text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\r\n          An Error Occurred!\r\n        </p>\r\n      )\r\n    } else {\r\n      return <PacMan />\r\n    }\r\n  }\r\n}\r\n\r\nexport default Runtime\r\n","import React, { useState } from \"react\"\r\nimport Runtime from \"../../graphs/importers/Runtime\"\r\n\r\nfunction Runtimes(props) {\r\n  const [runtimes] = useState([...props.data])\r\n  return (\r\n    <>\r\n      {runtimes.map((runtime, index) => {\r\n        return (\r\n          <Runtime\r\n            key={\"runtime-\" + index}\r\n            platform={props.platform}\r\n            type={runtime.type}\r\n            text={runtime.text}\r\n          />\r\n        )\r\n      })}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Runtimes\r\n","import React, { useState } from \"react\"\r\nimport Averages from \"../text/importers/Averages\"\r\nimport LineGraph from \"./importers/LineGraph\"\r\nimport Runtimes from \"../text/importers/Runtimes\"\r\n\r\nfunction ImportGraphs(props) {\r\n  const [graphs] = useState([...props.graphs])\r\n\r\n  return graphs.map((graph, index) => {\r\n\r\n    return (\r\n      <div\r\n        className=\"metric grid grid-cols-9\"\r\n        key={graph.platform + graph.header + index}\r\n      >\r\n        <div className=\"metric-header grid grid-flow-row-dense auto-rows-min col-span-2\">\r\n          <div className=\"grid grid-flow-col items-center\">\r\n            <h2 className=\"text-left font-semibold text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\r\n              {graph.header}\r\n            </h2>\r\n            <Runtimes data={graph.runtime} platform={props.platform} />\r\n          </div>\r\n          <Averages data={graph.averages} platform={props.platform} />\r\n        </div>\r\n        <div className=\"col-span-7 grid-flow-row-dense\">\r\n          <LineGraph\r\n            platform={props.platform}\r\n            color={props.color}\r\n            type={graph.total.type}\r\n            width={200}\r\n            height={120}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  })\r\n}\r\n\r\nexport default ImportGraphs\r\n","import React from \"react\"\r\nimport ImportGraphs from \"./graphs/ImportGraphs\"\r\n\r\nfunction ImportMetrics(props) {\r\n  return (\r\n    <div id={props.platform + \"-metric\"} className=\"grid\">\r\n      <h2 className=\"capitalize text-left font-bold text-3xl text-gray-900 dark:text-gray-200 subpixel-antialiased\">\r\n        {props.platform}\r\n      </h2>\r\n      <ImportGraphs\r\n        graphs={props.graphs}\r\n        platform={props.platform}\r\n        color={props.color}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImportMetrics\r\n","import React, { Component } from \"react\"\r\nimport PacMan from \"../../loader/pacMan\"\r\nimport axios from \"axios\"\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from \"recharts\"\r\nimport { config } from \"../../../config/Settings\"\r\nimport dayjs from \"dayjs\"\r\nimport { reverseCalcDates } from \"../../../helpers/reverseCalcDates\"\r\n\r\nclass AIBarGraph extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.boxName = this.props.boxName\r\n    this.params = this.props.params\r\n    this.state = {\r\n      data: null,\r\n      loading: true,\r\n      error: null,\r\n    }\r\n    this.getLogs = this.getLogs.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getLogs()\r\n\r\n    this.updateMetric = setInterval(this.getLogs, config.updateInterval)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.updateMetric)\r\n  }\r\n\r\n  getLogs() {\r\n    axios\r\n      .get(`${config.logUrl}/api/logs/ai/count_by_date`, {\r\n        params: this.params,\r\n      })\r\n      .then((response) => {\r\n        const reverse_result = reverseCalcDates(response.data)\r\n        const logs = reverse_result.map((data) => {\r\n          return {\r\n            x: dayjs(data.date).format(\"YYYY-MM-DD\"),\r\n            y: parseInt(data.count),\r\n          }\r\n        })\r\n\r\n        this.setState({ data: logs, loading: false, error: false })\r\n      })\r\n      .catch(() => {\r\n        return this.setState({ error: true, loading: false })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.data && !this.state.error && !this.state.loading) {\r\n      return (\r\n        <ResponsiveContainer width=\"100%\" height={config.graphHeight}>\r\n          <BarChart data={this.state.data}>\r\n            <XAxis dataKey=\"x\" stroke=\"#222\" tick={false} />\r\n            <YAxis dataKey=\"y\" stroke=\"#222\" />\r\n            <Tooltip />\r\n            <Bar dataKey=\"y\" name=\"Count\" fill={this.props.color} />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      )\r\n    } else if (this.state.error) {\r\n      return (\r\n        <p className=\"text-center text-gray-900 dark:text-gray-200\">\r\n          An Error Occurred!\r\n        </p>\r\n      )\r\n    } else {\r\n      return <PacMan />\r\n    }\r\n  }\r\n}\r\n\r\nexport default AIBarGraph\r\n","import React, { useState } from \"react\"\r\nimport AIBarGraph from \"./ai/AIBarGraph\"\r\n\r\nfunction AIBarGraphs(props) {\r\n  const [barGraphs] = useState([...props.graphs])\r\n\r\n  return barGraphs.map((graph, index) => {\r\n    return (\r\n      <div\r\n        className=\"metric grid grid-cols-9\"\r\n        key={graph.subTitle + \"-\" + index}\r\n      >\r\n        <div className=\"metric-header grid grid-flow-row auto-rows-min col-span-2\">\r\n          <h2 className=\"text-left font-semibold text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\r\n            {graph.subTitle}\r\n          </h2>\r\n        </div>\r\n        <div className=\"col-span-7\">\r\n          <AIBarGraph {...graph} />\r\n        </div>\r\n      </div>\r\n    )\r\n  })\r\n}\r\n\r\nexport default AIBarGraphs\r\n","import React, { Component } from \"react\"\r\nimport PacMan from \"../../loader/pacMan\"\r\nimport axios from \"axios\"\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from \"recharts\"\r\nimport { config } from \"../../../config/Settings\"\r\n\r\nclass AIDetections extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.boxName = this.props.boxName\r\n    this.params = this.props.params\r\n    this.state = {\r\n      data: null,\r\n      loading: true,\r\n      error: null,\r\n    }\r\n    this.getLogs = this.getLogs.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getLogs()\r\n\r\n    this.updateMetric = setInterval(this.getLogs, config.updateInterval)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.updateMetric)\r\n  }\r\n\r\n  getLogs() {\r\n    axios\r\n      .get(`${config.logUrl}/api/logs/ai/get_detections`, {\r\n        params: this.params,\r\n      })\r\n      .then((response) => {\r\n        this.setState({ data: response.data, loading: false, error: false })\r\n      })\r\n      .catch(() => {\r\n        return this.setState({ error: true, loading: false })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.data && !this.state.error && !this.state.loading) {\r\n      return (\r\n        <ResponsiveContainer width=\"100%\" height={config.graphHeight}>\r\n          <BarChart data={this.state.data}>\r\n            <XAxis dataKey=\"date\" stroke=\"#222\" tick={false} />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Bar\r\n              dataKey=\"finished_notfound\"\r\n              name=\"Detections not found\"\r\n              stackId=\"a\"\r\n              fill={this.props.colors[1]}\r\n            />\r\n            <Bar\r\n              dataKey=\"finished_found\"\r\n              name=\"Detections found\"\r\n              stackId=\"a\"\r\n              fill={this.props.colors[0]}\r\n            />\r\n\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      )\r\n    } else if (this.state.error) {\r\n      return (\r\n        <p className=\"text-center text-gray-900 dark:text-gray-200\">\r\n          An Error Occurred!\r\n        </p>\r\n      )\r\n    } else {\r\n      return <PacMan />\r\n    }\r\n  }\r\n}\r\n\r\nexport default AIDetections\r\n","import React, { useState } from \"react\"\r\nimport AIDetections from './ai/AIDetections'\r\n\r\nfunction AIStackedGraphs(props) {\r\n  const [stackedGraphs] = useState([...props.graphs])\r\n\r\n\r\n  return stackedGraphs.map((graph, index) => {\r\n    return (\r\n      <div\r\n        className=\"metric grid grid-cols-9\"\r\n        key={graph.subTitle + \"-\" + index}\r\n      >\r\n        <div className=\"metric-header grid grid-flow-row auto-rows-min col-span-2\">\r\n          <h2 className=\"text-left font-semibold text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\r\n            {graph.subTitle}\r\n          </h2>\r\n        </div>\r\n        <div className=\"col-span-7\">\r\n          <AIDetections {...graph} />\r\n        </div>\r\n      </div>\r\n    )\r\n  })\r\n}\r\n\r\nexport default AIStackedGraphs\r\n","import React, { Component } from \"react\"\r\nimport PacMan from \"../../loader/pacMan\"\r\nimport axios from \"axios\"\r\nimport { config } from \"../../../config/Settings\"\r\n\r\nclass LatestLog extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.aibox_id = this.props.params.aibox_id\r\n    this.state = {\r\n      data: null,\r\n      loading: true,\r\n      error: null,\r\n    }\r\n    this.getLatestLog = this.getLatestLog.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getLatestLog()\r\n\r\n    this.updateMetric = setInterval(this.getLatestLog, 10_000)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.updateMetric)\r\n  }\r\n\r\n  getLatestLog() {\r\n    axios\r\n      .get(`${config.logUrl}/api/logs/ai/latest_log`, {\r\n        params: {\r\n          aibox_id: this.aibox_id,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        this.setState({ data: response.data, loading: false, error: false })\r\n      })\r\n      .catch((e) => {\r\n        return this.setState({ error: e, loading: false })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.data && !this.state.error && !this.state.loading) {\r\n      return (\r\n        <code>\r\n          <p>{this.state.data.activity} / {this.state.data.sub_activity} / {this.state.data.timestamp}</p>\r\n        </code>\r\n      )\r\n    } else if (this.state.error) {\r\n      return (\r\n        <p className=\"text-center text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\r\n          An Error Occurred!\r\n        </p>\r\n      )\r\n    } else {\r\n      return <PacMan />\r\n    }\r\n  }\r\n}\r\n\r\nexport default LatestLog\r\n","import React, { useState } from \"react\"\r\nimport LatestLog from \"./ai/LatestLog\"\r\n\r\nfunction AIText(props) {\r\n  const [content] = useState([...props.text])\r\n\r\n  return content.map((text, index) => {\r\n    return (\r\n      <div\r\n        className=\"metric grid grid-cols-10\"\r\n        key={text.subTitle + \"-\" + index}\r\n      >\r\n        <div className=\"metric-header grid grid-flow-row auto-rows-min col-span-2\">\r\n          <h2 className=\"text-left font-semibold text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\r\n            {text.subTitle}\r\n          </h2>\r\n        </div>\r\n        <div className=\"col-span-8 gap-y-2\">\r\n          <LatestLog {...text} />\r\n        </div>\r\n      </div>\r\n    )\r\n  })\r\n}\r\n\r\nexport default AIText\r\n","import React, { Component } from \"react\"\r\nimport PacMan from \"../../loader/pacMan\"\r\nimport axios from \"axios\"\r\nimport { config } from \"../../../config/Settings\"\r\n\r\nclass DownloadFinished extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.aibox_id = this.props.params.aibox_id\r\n    this.state = {\r\n      data: null,\r\n      loading: true,\r\n      error: null,\r\n    }\r\n    this.getDownloadFinished = this.getDownloadFinished.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getDownloadFinished()\r\n\r\n    this.updateMetric = setInterval(\r\n      this.getDownloadFinished,\r\n      config.updateInterval\r\n    )\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.updateMetric)\r\n  }\r\n\r\n  getDownloadFinished() {\r\n    axios\r\n      .get(\r\n        `https://spi.cavea.io/ai/que?filter=%7B%22state%22:%20%22download-finished%22,%22aibox_id%22:%22${this.aibox_id}%22%7D&limit=9999999`\r\n      )\r\n      .then((response) => {\r\n        this.setState({ data: response.data, loading: false, error: false })\r\n      })\r\n      .catch((e) => {\r\n        return this.setState({ error: e, loading: false })\r\n      })\r\n  }\r\n\r\n  render() {  \r\n    if (this.state.data && !this.state.error && !this.state.loading) {\r\n      return (\r\n        <code>\r\n          <p> <b> Download finished: </b> {this.state.data.length}</p>\r\n        </code>\r\n      )\r\n    } else if (this.state.error) {\r\n      return (\r\n        <p className=\"text-center text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\r\n          An Error Occurred!\r\n        </p>\r\n      )\r\n    } else {\r\n      return <PacMan />\r\n    }\r\n  }\r\n}\r\n\r\nexport default DownloadFinished\r\n","import React, { Component } from \"react\"\r\nimport PacMan from \"../../loader/pacMan\"\r\nimport axios from \"axios\"\r\nimport { config } from \"../../../config/Settings\"\r\n\r\nclass AIStartedPerBox extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.aibox_id = this.props.params.aibox_id\r\n    this.state = {\r\n      data: null,\r\n      loading: true,\r\n      error: null,\r\n    }\r\n    this.max = \"\"\r\n   \r\n    this.getAIStartedPerBox = this.getAIStartedPerBox.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAIStartedPerBox()\r\n\r\n    this.updateMetric = setInterval(this.getAIStartedPerBox, config.updateInterval)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.updateMetric)\r\n  }\r\n\r\n  getAIStartedPerBox() {\r\n    axios\r\n      .get(\r\n        `https://spi.cavea.io/ai/que?filter=%7B%22state%22:%20%22ai-started%22,%22aibox_id%22:%22${this.aibox_id}%22%7D&limit=9999999`\r\n      )\r\n      .then((response) => {\r\n        this.setState({ data: response.data, loading: false, error: false })\r\n      })\r\n      .catch((e) => {\r\n        return this.setState({ error: e, loading: false })\r\n      })\r\n  }\r\n  activeItems(id) {\r\n    let maxValue = 121213;\r\n    switch(id){\r\n      case \"aibox1\":\r\n        maxValue = 5;\r\n        break;\r\n      case \"aibox2\":\r\n        maxValue = 3;\r\n        break;\r\n      case \"aibox3\":\r\n        maxValue = 3;\r\n          break;\r\n      case \"aibox4\":\r\n        maxValue = 2;\r\n          break;\r\n      default:\r\n        maxValue = 0;\r\n        break;\r\n    }\r\n\r\n    const activeItems = this.state.data.length\r\n    if (activeItems > maxValue) {\r\n      return {\r\n        backgroundColor: \"#F50010\",\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.data && !this.state.error && !this.state.loading) {\r\n      return (\r\n\r\n          <p style={this.activeItems(this.aibox_id)}\r\n          > \r\n          <b> Ai-started: </b> {this.state.data.length}\r\n          </p>\r\n\r\n\r\n\r\n      )\r\n    } else if (this.state.error) {\r\n      return (\r\n        <p className=\"text-center text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\r\n          An Error Occurred!\r\n        </p>\r\n      )\r\n    } else {\r\n      return <PacMan />\r\n    }\r\n  }\r\n}\r\n\r\nexport default AIStartedPerBox\r\n","import React, { useState } from \"react\"\r\nimport DownloadFinished from \"./ai/DownloadFinished\";\r\nimport AIStartedPerBox from \"./ai/AIStartedPerBox\";\r\n\r\nfunction AINums(props) {\r\n  const [content] = useState([...props.text])\r\n\r\n  return content.map((text, index) => {\r\n    console.log(text, index);\r\n    return (\r\n      <div\r\n        className=\"metric grid grid-cols-10\"\r\n        key={text.subTitle + \"-\" + index}\r\n      >\r\n        <div className=\"metric-header grid grid-flow-row auto-rows-min col-span-2\">\r\n          <h2 className=\"text-left font-semibold text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\r\n            Status\r\n          </h2>\r\n        </div>\r\n        <div className=\"col-span-8 gap-y-2 grid grid-cols-2 grid-flow-col\">\r\n          <DownloadFinished {...text} />\r\n          <AIStartedPerBox {...text} />\r\n        </div>\r\n      </div>\r\n    )\r\n  })\r\n}\r\n\r\nexport default AINums","import React from \"react\"\r\nimport AIBarGraphs from \"./graphs/AIBarGraphs\"\r\nimport AIStackedGraphs from \"./graphs/AIStackedGraphs\"\r\nimport AIText from \"./text/AIText\"\r\nimport AINums from \"./text/AInums\"\r\n\r\nfunction ai_bar_graph(props) {\r\n  if (props.graphs.bar) {\r\n    return <AIBarGraphs graphs={props.graphs.bar} />\r\n  }\r\n}\r\n\r\nfunction ai_detections(props) {\r\n  if (props.graphs.stacked.detections) {\r\n    return <AIStackedGraphs graphs={props.graphs.stacked.detections} />\r\n  }\r\n}\r\n\r\nfunction ai_text(props) {\r\n  if (props.text) {\r\n    return <AIText text={props.text} />\r\n  }\r\n}\r\n\r\nfunction ai_nums(props) {\r\n  if (props.text) {\r\n    return <AINums text={props.text} />\r\n  }\r\n}\r\n\r\nfunction AIMetrics(props) {\r\n  return (\r\n    <div id={props.boxName + \"-metric\"} className=\"grid gap-y-5 mb-2\">\r\n      <h2 className=\"capitalize text-left font-bold text-3xl text-gray-900 dark:text-gray-200 subpixel-antialiased\">\r\n        {props.boxName}\r\n      </h2>\r\n      <div className=\"grid grid-cols-2\">\r\n        {ai_bar_graph(props)}\r\n        {ai_detections(props)}\r\n      </div>\r\n      <div className=\"grid\">{ai_nums(props)}\r\n      </div>\r\n      <div className=\"grid\">{ai_text(props)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AIMetrics\r\n","import React, { Component } from \"react\"\r\nimport PacMan from \"../../loader/pacMan\"\r\nimport axios from \"axios\"\r\nimport { config } from \"../../../config/Settings\"\r\n\r\nclass AIStarted extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      data: null,\r\n      loading: true,\r\n      error: null,\r\n    }\r\n    this.getAiStarted = this.getAiStarted.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAiStarted()\r\n\r\n    this.updateMetric = setInterval(this.getAiStarted, config.updateInterval)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.updateMetric)\r\n  }\r\n\r\n  getAiStarted() {\r\n    axios\r\n      .get(\r\n        `https://spi.cavea.io/ai/que?filter={%22state%22:%20%22ai-started%22}`\r\n      )\r\n      .then((response) => {\r\n        this.setState({ data: response.data, loading: false, error: false })\r\n      })\r\n      .catch((e) => {\r\n        return this.setState({ error: e, loading: false })\r\n      })\r\n  }\r\n\r\n  activeItems() {\r\n    const activeItems = this.state.data.length\r\n    if (activeItems > 13 && activeItems < 17) {\r\n      return {\r\n        backgroundColor: \"#EEDD33\",\r\n      }\r\n    } else if (activeItems > 17) {\r\n      return {\r\n        backgroundColor: \"#F50010\",\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.data && !this.state.error && !this.state.loading) {\r\n      return (\r\n        <h1\r\n          style={this.activeItems()}\r\n          className=\"text-center text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\"\r\n        >\r\n          Num. Active Items: {this.state.data.length}\r\n        </h1>\r\n      )\r\n    } else if (this.state.error) {\r\n      return (\r\n        <p className=\"text-center text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\r\n          An Error Occurred!\r\n        </p>\r\n      )\r\n    } else {\r\n      return <PacMan />\r\n    }\r\n  }\r\n}\r\n\r\nexport default AIStarted\r\n","import React, { Component } from \"react\"\r\nimport PacMan from \"../../loader/pacMan\"\r\nimport axios from \"axios\"\r\nimport { config } from \"../../../config/Settings\"\r\n\r\nclass DownloadPending extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      data: null,\r\n      loading: true,\r\n      error: null,\r\n    }\r\n    this.getDownloadPending = this.getDownloadPending.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getDownloadPending()\r\n\r\n    this.updateMetric = setInterval(\r\n      this.getDownloadPending,\r\n      config.updateInterval\r\n    )\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.updateMetric)\r\n  }\r\n\r\n  getDownloadPending() {\r\n    axios\r\n      .get(\r\n        `https://spi.cavea.io/ai/que?filter={%22state%22:%20%22download-pending%22}&limit=9999999`\r\n      )\r\n      .then((response) => {\r\n        this.setState({ data: response.data, loading: false, error: false })\r\n      })\r\n      .catch((e) => {\r\n        return this.setState({ error: e, loading: false })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.data && !this.state.error && !this.state.loading) {\r\n      return (\r\n        <h1 className=\"text-center text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\r\n          Num. Pending Items: {this.state.data.length}\r\n        </h1>\r\n      )\r\n    } else if (this.state.error) {\r\n      return (\r\n        <p className=\"text-center text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\r\n          An Error Occurred!\r\n        </p>\r\n      )\r\n    } else {\r\n      return <PacMan />\r\n    }\r\n  }\r\n}\r\n\r\nexport default DownloadPending\r\n","import ImportMetrics from \"./components/ImportMetrics\"\r\nimport AIMetrics from \"./components/AIMetrics\"\r\nimport { importers } from \"./config/Importers\"\r\nimport { AI } from \"./config/AI\"\r\nimport AIStarted from \"./components/text/ai/AIStarted\"\r\nimport DownloadPending from \"./components/text/ai/DownloadPending\"\r\n\r\nconst loadImporterMetrics = importers.map((platform) => {\r\n  return <ImportMetrics {...platform} key={platform.platform} />\r\n})\r\nconst loadAIMetrics = AI.map((ai) => {\r\n  return <AIMetrics {...ai} key={ai.boxName} />\r\n})\r\n\r\nconst App = () => (\r\n  <div className=\"p-5 mx-auto grid md:grid-cols-1 lg:grid-cols-2 gap-x-5\">\r\n    <div className=\"import-logs\">{loadImporterMetrics}</div>\r\n    <div className=\"ai-logs\">\r\n      <div className=\"grid grid-cols-2 grid-flow-col\">\r\n        <DownloadPending />\r\n        <AIStarted />\r\n      </div>\r\n      {loadAIMetrics}\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default App\r\n","export const importers = [\r\n  {\r\n    platform: \"facebook\",\r\n    color: \"#4267B2\",\r\n    graphs: [\r\n      {\r\n        header: \"Posts\",\r\n        total: {\r\n          type: \"post_count\",\r\n        },\r\n        averages: [\r\n          {\r\n            type: \"process_handle\",\r\n            text: \"H/h\",\r\n          },\r\n          {\r\n            type: \"post_count\",\r\n            text: \"P/h\",\r\n          },\r\n        ],\r\n        runtime: [],\r\n      },\r\n      {\r\n        header: \"Live\",\r\n        total: {\r\n          type: \"streams_count\",\r\n        },\r\n        averages: [\r\n          {\r\n            type: \"process_stream_handle\",\r\n            text: \"H/h\",\r\n          },\r\n          {\r\n            type: \"streams_count\",\r\n            text: \"S/h\",\r\n          },\r\n        ],\r\n        runtime: [],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    platform: \"instagram\",\r\n    color: \"#C13584\",\r\n    graphs: [\r\n      {\r\n        header: \"Posts\",\r\n        total: {\r\n          type: \"post_count\",\r\n        },\r\n        averages: [\r\n          {\r\n            type: \"process_handle\",\r\n            text: \"H/h\",\r\n          },\r\n          {\r\n            type: \"post_count\",\r\n            text: \"P/h\",\r\n          },\r\n        ],\r\n        runtime: [],\r\n      },\r\n      {\r\n        header: \"Stories\",\r\n        total: {\r\n          type: \"story_count\",\r\n        },\r\n        averages: [\r\n          {\r\n            type: \"process_story_handle\",\r\n            text: \"H/h\",\r\n          },\r\n          {\r\n            type: \"story_count\",\r\n            text: \"S/h\",\r\n          },\r\n        ],\r\n        runtime: [],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    platform: \"twitch\",\r\n    color: \"#6441a5\",\r\n    graphs: [\r\n      {\r\n        header: \"Clips\",\r\n        total: {\r\n          type: \"post_count\",\r\n        },\r\n        averages: [\r\n          {\r\n            type: \"process_handle\",\r\n            text: \"H/h\",\r\n          },\r\n          {\r\n            type: \"post_count\",\r\n            text: \"P/h\",\r\n          },\r\n        ],\r\n        runtime: [],\r\n      },\r\n      {\r\n        header: \"Live\",\r\n        total: {\r\n          type: \"streams_count\",\r\n        },\r\n        averages: [\r\n          {\r\n            type: \"process_stream_handle\",\r\n            text: \"H/h\",\r\n          },\r\n          {\r\n            type: \"streams_count\",\r\n            text: \"S/h\",\r\n          },\r\n        ],\r\n        runtime: [],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    platform: \"twitter\",\r\n    color: \"#1DA1F2\",\r\n    graphs: [\r\n      {\r\n        header: \"Posts\",\r\n        total: {\r\n          type: \"post_count\",\r\n        },\r\n        averages: [\r\n          {\r\n            type: \"process_handle\",\r\n            text: \"H/h\",\r\n          },\r\n          {\r\n            type: \"post_count\",\r\n            text: \"P/h\",\r\n          },\r\n        ],\r\n        runtime: [\r\n          {\r\n            type: \"sleep_timer\",\r\n            text: \"Idle% = x / 1,44\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        header: \"Metrics\",\r\n        total: {\r\n          type: \"post_metric_count\",\r\n        },\r\n        averages: [\r\n          {\r\n            type: \"process_metric_handle\",\r\n            text: \"H/h\",\r\n          },\r\n          {\r\n            type: \"post_metric_count\",\r\n            text: \"P/h\",\r\n          },\r\n        ],\r\n        runtime: [],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    platform: \"youtube\",\r\n    color: \"#FF0000\",\r\n    graphs: [\r\n      {\r\n        header: \"Videos\",\r\n        total: {\r\n          type: \"post_count\",\r\n        },\r\n        averages: [\r\n          {\r\n            type: \"process_handle\",\r\n            text: \"H/h\",\r\n          },\r\n          {\r\n            type: \"post_count\",\r\n            text: \"P/h\",\r\n          },\r\n        ],\r\n        runtime: [\r\n          {\r\n            type: \"sleep_timer\",\r\n            text: \"Idle% = x / 1,44\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        header: \"Live\",\r\n        total: {\r\n          type: \"streams_count\",\r\n        },\r\n        averages: [\r\n          {\r\n            type: \"process_stream_handle\",\r\n            text: \"H/h\",\r\n          },\r\n          {\r\n            type: \"streams_count\",\r\n            text: \"S/h\",\r\n          },\r\n        ],\r\n        runtime: [],\r\n      },\r\n    ],\r\n  },\r\n  /*{\r\n    platform: \"trovo\",\r\n    color: \"#FF0000\",\r\n    graphs: [\r\n      {\r\n        header: \"Streams\",\r\n        total: {\r\n          type: \"stream_imported\",\r\n        },\r\n        averages: [\r\n          {\r\n            type: \"process_stream_handle\",\r\n            text: \"Avg. Channels/h\",\r\n          },\r\n          {\r\n            type: \"stream_imported\",\r\n            text: \"Avg. Streams/h\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        header: \"Clips?!?\",\r\n        total: {\r\n          type: \"post_imported\",\r\n        },\r\n        averages: [\r\n          {\r\n            type: \"process_handle\",\r\n            text: \"Avg. Channels/h\",\r\n          },\r\n          {\r\n            type: \"post_imported\",\r\n            text: \"Avg. Clips/h/h\",\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },*/\r\n]\r\n","export const AI = [\r\n  {\r\n    boxName: \"AIBOX1\",\r\n    graphs: {\r\n      stacked: {\r\n        detections: [\r\n          {\r\n            subTitle: \"AI Detections\",\r\n            colors: [\"#00DD55\", \"#99BBFF\"],\r\n            params: {\r\n              aibox_id: \"aibox1\",\r\n              activity: \"ANALYSIS\",\r\n              sub_activity: \"FINISHED_FOUND,FINISHED_NOTFOUND\",\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      bar: [\r\n        {\r\n          subTitle: \"Download Failed\",\r\n          color: \"#EEDD33\",\r\n          params: {\r\n            aibox_id: \"aibox1\",\r\n            activity: \"DOWNLOADING\",\r\n            sub_activity: \"FAILED\",\r\n          },\r\n        },\r\n        {\r\n          subTitle: \"Download Finished\",\r\n          color: \"#99BBFF\",\r\n          params: {\r\n            aibox_id: \"aibox1\",\r\n            activity: \"DOWNLOADING\",\r\n            sub_activity: \"FINISHED\",\r\n          },\r\n        },\r\n        {\r\n          subTitle: \"AI Failed\",\r\n          color: \"#F50010\",\r\n          params: {\r\n            aibox_id: \"aibox1\",\r\n            activity: \"ANALYSIS\",\r\n            sub_activity: \"FAILED\",\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    text: [{ subTitle: \"Latest Log Entry\", params: { aibox_id: \"aibox1\" } }],\r\n  },\r\n  {\r\n    boxName: \"AIBOX2\",\r\n    graphs: {\r\n      stacked: {\r\n        detections: [\r\n          {\r\n            subTitle: \"AI Detections\",\r\n            colors: [\"#00DD55\", \"#99BBFF\"],\r\n            params: {\r\n              aibox_id: \"aibox2\",\r\n              activity: \"ANALYSIS\",\r\n              sub_activity: \"FINISHED_FOUND,FINISHED_NOTFOUND\",\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      bar: [\r\n        {\r\n          subTitle: \"Download Failed\",\r\n          color: \"#EEDD33\",\r\n          params: {\r\n            aibox_id: \"aibox2\",\r\n            activity: \"DOWNLOADING\",\r\n            sub_activity: \"FAILED\",\r\n          },\r\n        },\r\n        {\r\n          subTitle: \"Download Finished\",\r\n          color: \"#99BBFF\",\r\n          params: {\r\n            aibox_id: \"aibox2\",\r\n            activity: \"DOWNLOADING\",\r\n            sub_activity: \"FINISHED\",\r\n          },\r\n        },\r\n        {\r\n          subTitle: \"AI Failed\",\r\n          color: \"#F50010\",\r\n          params: {\r\n            aibox_id: \"aibox2\",\r\n            activity: \"ANALYSIS\",\r\n            sub_activity: \"FAILED\",\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    text: [{ subTitle: \"Latest Log Entry\", params: { aibox_id: \"aibox2\" } }],\r\n  },\r\n  {\r\n    boxName: \"AIBOX3\",\r\n    graphs: {\r\n      stacked: {\r\n        detections: [\r\n          {\r\n            subTitle: \"AI Detections\",\r\n            colors: [\"#00DD55\", \"#99BBFF\"],\r\n            params: {\r\n              aibox_id: \"aibox3\",\r\n              activity: \"ANALYSIS\",\r\n              sub_activity: \"FINISHED_FOUND,FINISHED_NOTFOUND\",\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      bar: [\r\n        {\r\n          subTitle: \"Download Failed\",\r\n          color: \"#EEDD33\",\r\n          params: {\r\n            aibox_id: \"aibox3\",\r\n            activity: \"DOWNLOADING\",\r\n            sub_activity: \"FAILED\",\r\n          },\r\n        },\r\n        {\r\n          subTitle: \"Download Finished\",\r\n          color: \"#99BBFF\",\r\n          params: {\r\n            aibox_id: \"aibox3\",\r\n            activity: \"DOWNLOADING\",\r\n            sub_activity: \"FINISHED\",\r\n          },\r\n        },\r\n        {\r\n          subTitle: \"AI Failed\",\r\n          color: \"#F50010\",\r\n          params: {\r\n            aibox_id: \"aibox3\",\r\n            activity: \"ANALYSIS\",\r\n            sub_activity: \"FAILED\",\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    text: [{ subTitle: \"Latest Log Entry\", params: { aibox_id: \"aibox3\" } }],\r\n  },\r\n  {\r\n    boxName: \"AIBOX4\",\r\n    graphs: {\r\n      stacked: {\r\n        detections: [\r\n          {\r\n            subTitle: \"AI Detections\",\r\n            colors: [\"#00DD55\", \"#99BBFF\"],\r\n            params: {\r\n              aibox_id: \"aibox4\",\r\n              activity: \"ANALYSIS\",\r\n              sub_activity: \"FINISHED_FOUND,FINISHED_NOTFOUND\",\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      bar: [\r\n        {\r\n          subTitle: \"Download Failed\",\r\n          color: \"#EEDD33\",\r\n          params: {\r\n            aibox_id: \"aibox4\",\r\n            activity: \"DOWNLOADING\",\r\n            sub_activity: \"FAILED\",\r\n          },\r\n        },\r\n        {\r\n          subTitle: \"Download Finished\",\r\n          color: \"#99BBFF\",\r\n          params: {\r\n            aibox_id: \"aibox4\",\r\n            activity: \"DOWNLOADING\",\r\n            sub_activity: \"FINISHED\",\r\n          },\r\n        },\r\n        {\r\n          subTitle: \"AI Failed\",\r\n          color: \"#F50010\",\r\n          params: {\r\n            aibox_id: \"aibox4\",\r\n            activity: \"ANALYSIS\",\r\n            sub_activity: \"FAILED\",\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    text: [{ subTitle: \"Latest Log Entry\", params: { aibox_id: \"aibox4\" } }],\r\n  },\r\n  /*{\r\n    boxName: \"DEV1\",\r\n    graphs: [\r\n      {\r\n        subTitle: \"AI Posts\",\r\n        color: \"#F30482\",\r\n        params: {\r\n          aibox_id: \"dev1\",\r\n          activity: \"ANALYSIS\",\r\n          sub_activity: \"POSTING\",\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    boxName: \"DEV2\",\r\n    graphs: [\r\n      {\r\n        subTitle: \"AI Posts\",\r\n        color: \"#F30482\",\r\n        params: {\r\n          aibox_id: \"dev2\",\r\n          activity: \"ANALYSIS\",\r\n          sub_activity: \"POSTING\",\r\n        },\r\n      },\r\n    ],\r\n  },*/\r\n]\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}