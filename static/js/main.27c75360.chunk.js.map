{"version":3,"sources":["components/loader/pacMan.jsx","components/counters/textCounter.jsx","mainConfig.js","components/graphs/averagePerHour.jsx","components/averages.jsx","components/graphs/waitedPerDay.jsx","components/waited.jsx","components/graphs/importedLineGraph.jsx","components/platformContent.jsx","components/importMetrics.jsx","App.jsx","platformConfig.js","reportWebVitals.js","index.js"],"names":["PacMan","className","type","size","active","TextCounter","props","text","data","config","AveragePerHour","platform","state","loading","error","getAveragePerHour","bind","this","updateMetric","setInterval","clearInterval","axios","get","params","from","interval","then","response","avg","setState","catch","Component","Averages","useState","averages","map","average","WaitedPerDay","getWaitedPerDay","waited","Waited","ImportedLineGraph","getTotalImports","x","moment","date","format","y","parseInt","count","ResponsiveContainer","width","height","LineChart","XAxis","dataKey","stroke","tick","YAxis","Tooltip","Line","name","color","strokeWidth","PlatformContent","graphs","graph","index","header","total","ImportMetrics","id","loadImporterMetrics","key","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27c75360.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Loader from \"react-loaders\";\r\n\r\nfunction PacMan() {\r\n  return (\r\n    <div className=\"h-40 flex justify-center items-center\">\r\n      <Loader type=\"pacman\" size={\"custom\"} active />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PacMan;\r\n","import React from \"react\";\n\nconst TextCounter = (props) => {\n  return (\n    <p className=\"text-center text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\n      {props.text}: {props.data}\n    </p>\n  );\n};\n\nexport default TextCounter;\n","export const config = {\r\n  updateInterval: 60_000,\r\n  apiUrl: \"https://cavea-test-api-php-review-develop-3zknud.cavea.dev\",\r\n};\r\n","import React, { Component } from \"react\";\nimport PacMan from \"../loader/pacMan\";\nimport axios from \"axios\";\nimport TextCounter from \"../counters/textCounter\";\nimport { config } from \"../../mainConfig\";\n\nclass AveragePerHour extends Component {\n  constructor(props) {\n    super(props);\n    this.platform = this.props.platform;\n    this.type = this.props.type;\n    this.state = {\n      data: null,\n      loading: true,\n      error: null,\n    };\n    this.getAveragePerHour = this.getAveragePerHour.bind(this);\n  }\n\n  componentDidMount() {\n    this.getAveragePerHour();\n\n    this.updateMetric = setInterval(\n      this.getAveragePerHour,\n      config.updateInterval\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.updateMetric);\n  }\n\n  getAveragePerHour() {\n    axios\n      .get(`${config.apiUrl}/api/logs/import/average`, {\n        params: {\n          platform: this.platform,\n          from: 30,\n          type: this.type,\n          interval: 3600, // One hour\n        },\n      })\n      .then((response) => {\n        const { avg } = response.data;\n        this.setState({ data: avg, loading: false });\n      })\n      .catch(() => {\n        return this.setState({ error: true, loading: false });\n      });\n  }\n\n  render() {\n    if (this.state.data && !this.state.error && !this.state.loading) {\n      return <TextCounter data={this.state.data} text={this.props.text} />;\n    } else if (this.state.error) {\n      return (\n        <p className=\"text-center text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\n          An Error Occurred!\n        </p>\n      );\n    } else {\n      return <PacMan />;\n    }\n  }\n}\n\nexport default AveragePerHour;\n","import React, { useState } from \"react\";\nimport AveragePerHour from \"./graphs/averagePerHour\";\n\nfunction Averages(props) {\n  const [averages] = useState([...props.averages]);\n  return (\n    <>\n      {averages.map((average) => {\n        return (\n          <AveragePerHour\n            platform={props.platform}\n            type={average.type}\n            text={average.text}\n          />\n        );\n      })}\n    </>\n  );\n}\n\nexport default Averages;\n","import React, { Component } from \"react\";\nimport PacMan from \"../loader/pacMan\";\nimport axios from \"axios\";\nimport TextCounter from \"../counters/textCounter\";\nimport { config } from \"../../mainConfig\";\n\nclass WaitedPerDay extends Component {\n  constructor(props) {\n    super(props);\n    this.platform = this.props.platform;\n    this.type = this.props.type;\n    this.state = {\n      data: null,\n      loading: true,\n      error: null,\n    };\n    this.getWaitedPerDay = this.getWaitedPerDay.bind(this);\n  }\n\n  componentDidMount() {\n    this.getWaitedPerDay();\n\n    this.updateMetric = setInterval(\n      this.getWaitedPerDay,\n      config.updateInterval\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.updateMetric);\n  }\n\n  getWaitedPerDay() {\n    axios\n      .get(`${config.apiUrl}/api/logs/import/waited`, {\n        params: {\n          platform: this.platform,\n          type: this.type,\n        },\n      })\n      .then((response) => {\n        const { waited } = response.data;\n        this.setState({ data: waited, loading: false });\n      })\n      .catch(() => {\n        return this.setState({ error: true, loading: false });\n      });\n  }\n\n  render() {\n    if (this.state.data && !this.state.error && !this.state.loading) {\n      return <TextCounter data={this.state.data} text={this.props.text} />;\n    } else if (this.state.error) {\n      return (\n        <p className=\"text-center text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\n          An Error Occurred!\n        </p>\n      );\n    } else {\n      return <PacMan />;\n    }\n  }\n}\n\nexport default WaitedPerDay;\n","import React, { useState } from \"react\";\nimport WaitedPerDay from \"./graphs/waitedPerDay\";\n\nfunction Waited(props) {\n  const [waited] = useState([...props.waited]);\n  return (\n    <>\n      {waited.map((average) => {\n        return (\n          <WaitedPerDay\n            platform={props.platform}\n            type={average.type}\n            text={average.text}\n          />\n        );\n      })}\n    </>\n  );\n}\n\nexport default Waited;\n","import React, { Component } from \"react\";\nimport PacMan from \"../loader/pacMan\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport {\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\";\nimport { config } from \"../../mainConfig\";\n\nclass ImportedLineGraph extends Component {\n  constructor(props) {\n    super(props);\n    this.platform = this.props.platform;\n    this.type = this.props.type;\n    this.state = {\n      data: null,\n      loading: true,\n      error: null,\n    };\n    this.getTotalImports = this.getTotalImports.bind(this);\n  }\n\n  componentDidMount() {\n    this.getTotalImports();\n\n    this.updateMetric = setInterval(\n      this.getTotalImports,\n      config.updateInterval\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.updateMetric);\n  }\n\n  getTotalImports() {\n    axios\n      .get(`${config.apiUrl}/api/logs/import/total`, {\n        params: {\n          platform: this.platform,\n          type: this.type,\n          from: 30,\n        },\n      })\n      .then((response) => {\n        const data = [...response.data].map((data) => {\n          return {\n            x: moment(data.date).format(\"YYYY-MM-DD\"),\n            y: parseInt(data.count),\n          };\n        });\n\n        this.setState({ data: data, loading: false });\n      })\n      .catch(() => {\n        return this.setState({ error: true, loading: false });\n      });\n  }\n\n  render() {\n    if (this.state.data && !this.state.error && !this.state.loading) {\n      return (\n        <ResponsiveContainer width=\"100%\" height={this.props.height}>\n          <LineChart data={this.state.data}>\n            <XAxis dataKey=\"x\" stroke=\"#222\" tick={false} />\n            <YAxis dataKey=\"y\" stroke=\"#222\" />\n            <Tooltip />\n            <Line\n              dataKey=\"y\"\n              name=\"Posts\"\n              stroke={this.props.color}\n              strokeWidth={5}\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      );\n    } else if (this.state.error) {\n      return (\n        <p className=\"text-center text-gray-900 dark:text-gray-200\">\n          An Error Occurred!\n        </p>\n      );\n    } else {\n      return <PacMan />;\n    }\n  }\n}\n\nexport default ImportedLineGraph;\n","import React, { useState } from \"react\";\nimport Averages from \"./averages\";\nimport Waited from \"./waited\";\nimport ImportedLineGraph from \"./graphs/importedLineGraph\";\n\nfunction PlatformContent(props) {\n  const [graphs] = useState([...props.graphs]);\n\n  return graphs.map((graph, index) => {\n    return (\n      <div\n        className=\"metric grid gap-y-5\"\n        key={graph.platform + graph.header + index}\n      >\n        <div className=\"metric-header grid grid-flow-col-dense items-center\">\n          <h2 className=\"text-left font-semibold text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\n            {graph.header}\n          </h2>\n          <Waited waited={graph.waited} platform={props.platform} />\n          <Averages averages={graph.averages} platform={props.platform} />\n        </div>\n        <ImportedLineGraph\n          platform={props.platform}\n          color={props.color}\n          type={graph.total.type}\n          width={200}\n          height={150}\n        />\n      </div>\n    );\n  });\n}\n\nexport default PlatformContent;\n","import React from \"react\";\r\nimport PlatformContent from \"./platformContent\";\r\n\r\nfunction ImportMetrics(props) {\r\n  return (\r\n    <div id={props.platform + \"-metric\"} className=\"grid gap-y-3\">\r\n      <h2 className=\"capitalize text-left font-bold text-3xl text-gray-900 dark:text-gray-200 subpixel-antialiased\">\r\n        {props.platform}\r\n      </h2>\r\n      <PlatformContent\r\n        graphs={props.graphs}\r\n        platform={props.platform}\r\n        color={props.color}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImportMetrics;\r\n","import ImportMetrics from \"./components/importMetrics\";\r\nimport { platforms } from \"./platformConfig\";\r\n\r\nconst loadImporterMetrics = platforms.map((platform, index) => {\r\n  return <ImportMetrics {...platform} key={platform.platform} />;\r\n});\r\n\r\n/* For future use.\r\nconst loadAIMetrics = platforms.map((platform, index) => {\r\n  return <AIMetrics {...platform} key={platform.platform} />;\r\n});*/\r\n/*\r\n   <div className=\"ai-metrics grid grid-cols-2 gap-x-5\">\r\n      {loadImporterMetrics}\r\n    </div>\r\n*/\r\n\r\nconst App = () => (\r\n  <div className=\"p-5 mx-auto grid grid-cols-2 gap-y-5\">\r\n    <div className=\"import-logs\">{loadImporterMetrics}</div>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","export const platforms = [\n  {\n    platform: \"facebook\",\n    color: \"#4267B2\",\n    graphs: [\n      {\n        header: \"Posts\",\n        total: {\n          type: \"post_count\",\n        },\n        averages: [\n          {\n            type: \"process_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"post_imported\",\n            text: \"P/h\",\n          },\n        ],\n        waited: [],\n      },\n    ],\n  },\n  {\n    platform: \"instagram\",\n    color: \"#C13584\",\n    graphs: [\n      {\n        header: \"Posts\",\n        total: {\n          type: \"post_count\",\n        },\n        averages: [\n          {\n            type: \"process_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"post_imported\",\n            text: \"P/h\",\n          },\n        ],\n        waited: [],\n      },\n      {\n        header: \"Stories\",\n        total: {\n          type: \"story_count\",\n        },\n        averages: [\n          {\n            type: \"process_story_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"story_created\",\n            text: \"S/h\",\n          },\n        ],\n        waited: [],\n      },\n    ],\n  },\n  {\n    platform: \"twitch\",\n    color: \"#6441a5\",\n    graphs: [\n      {\n        header: \"Clips\",\n        total: {\n          type: \"post_count\",\n        },\n        averages: [\n          {\n            type: \"process_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"post_imported\",\n            text: \"P/h\",\n          },\n        ],\n        waited: [],\n      },\n      /*{\n        header: \"Streams\",\n        total: {\n          type: \"stream_imported\",\n        },\n        averages: [\n          {\n            type: \"process_stream_handle\",\n            text: \"Avg. Channels/h\",\n          },\n          {\n            type: \"stream_imported\",\n            text: \"Avg. Streams/h\",\n          },\n        ],\n      },*/\n    ],\n  },\n  {\n    platform: \"twitter\",\n    color: \"#1DA1F2\",\n    graphs: [\n      {\n        header: \"Posts\",\n        total: {\n          type: \"post_count\",\n        },\n        averages: [\n          {\n            type: \"process_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"post_count\",\n            text: \"P/h\",\n          },\n        ],\n        waited: [],\n      },\n      {\n        header: \"Metrics\",\n        total: {\n          type: \"post_metric_count\",\n        },\n        averages: [\n          {\n            type: \"process_metric_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"post_metric_imported\",\n            text: \"P/h\",\n          },\n        ],\n        waited: [],\n      },\n    ],\n  },\n  {\n    platform: \"youtube\",\n    color: \"#FF0000\",\n    graphs: [\n      {\n        header: \"Videos\",\n        total: {\n          type: \"post_count\",\n        },\n        averages: [\n          {\n            type: \"process_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"post_imported\",\n            text: \"P/h\",\n          },\n        ],\n        waited: [\n          {\n            type: \"sleep_timer\",\n            text: \"Idle% = x / 1,44\",\n          },\n        ],\n      },\n      /*{\n        header: \"Streams\",\n        total: {\n          type: \"stream_imported\",\n        },\n        averages: [\n          {\n            type: \"process_stream_handle\",\n            text: \"Avg. Channels/h\",\n          },\n          {\n            type: \"stream_imported\",\n            text: \"Avg. Streams/h\",\n          },\n        ],\n      },*/\n    ],\n  },\n  /*{\n    platform: \"trovo\",\n    color: \"#FF0000\",\n    graphs: [\n      {\n        header: \"Streams\",\n        total: {\n          type: \"stream_imported\",\n        },\n        averages: [\n          {\n            type: \"process_stream_handle\",\n            text: \"Avg. Channels/h\",\n          },\n          {\n            type: \"stream_imported\",\n            text: \"Avg. Streams/h\",\n          },\n        ],\n      },\n      {\n        header: \"Clips?!?\",\n        total: {\n          type: \"post_imported\",\n        },\n        averages: [\n          {\n            type: \"process_handle\",\n            text: \"Avg. Channels/h\",\n          },\n          {\n            type: \"post_imported\",\n            text: \"Avg. Clips/h/h\",\n          },\n        ],\n      },\n    ],\n  },*/\n];\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}