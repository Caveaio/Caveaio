{"version":3,"sources":["components/loader/pacMan.jsx","components/counters/textCounter.jsx","mainConfig.js","components/graphs/averagePerHour.jsx","components/averages.jsx","components/graphs/importedLineGraph.jsx","components/platformContent.jsx","components/importMetrics.jsx","App.jsx","platformConfig.js","reportWebVitals.js","index.js"],"names":["PacMan","className","type","size","active","TextCounter","props","text","data","config","AveragePerHour","platform","state","loading","error","getAveragePerHour","bind","this","updateMetric","setInterval","clearInterval","axios","get","params","from","interval","then","response","avg","setState","catch","Component","Averages","useState","averages","map","average","index","ImportedLineGraph","getTotalImports","x","moment","date","format","y","parseInt","count","ResponsiveContainer","width","height","LineChart","XAxis","dataKey","stroke","tick","YAxis","domain","Tooltip","Line","name","color","strokeWidth","PlatformContent","graphs","graph","header","total","ImportMetrics","id","loadImporterMetrics","key","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e471ef2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Loader from \"react-loaders\";\r\n\r\nfunction PacMan() {\r\n  return (\r\n    <div className=\"h-40 flex justify-center items-center\">\r\n      <Loader type=\"pacman\" size={\"custom\"} active />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PacMan;\r\n","import React from \"react\";\r\n\r\nconst TextCounter = (props) => {\r\n  return (\r\n    <>\r\n      <p className=\"text-center text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\r\n        <span className=\"font-semibold\">{props.text}:</span> {props.data}\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TextCounter;\r\n","export const config = {\r\n  updateInterval: 60_000,\r\n  apiUrl: \"https://cavea-test-api-php-review-develop-3zknud.cavea.dev\",\r\n};\r\n","import React, { Component } from \"react\";\nimport PacMan from \"../loader/pacMan\";\nimport axios from \"axios\";\nimport TextCounter from \"../counters/textCounter\";\nimport { config } from \"../../mainConfig\";\n\nclass AveragePerHour extends Component {\n  constructor(props) {\n    super(props);\n    this.platform = this.props.platform;\n    this.type = this.props.type;\n    this.state = {\n      data: null,\n      loading: true,\n      error: null,\n    };\n    this.getAveragePerHour = this.getAveragePerHour.bind(this);\n  }\n\n  componentDidMount() {\n    this.getAveragePerHour();\n\n    this.updateMetric = setInterval(\n      this.getAveragePerHour,\n      config.updateInterval\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.updateMetric);\n  }\n\n  getAveragePerHour() {\n    axios\n      .get(`${config.apiUrl}/api/logs/import/average`, {\n        params: {\n          platform: this.platform,\n          from: 30,\n          type: this.type,\n          interval: 3600, // One hour\n        },\n      })\n      .then((response) => {\n        const { avg } = response.data;\n        this.setState({ data: avg, loading: false });\n      })\n      .catch(() => {\n        return this.setState({ error: true, loading: false });\n      });\n  }\n\n  render() {\n    if (this.state.data && !this.state.error && !this.state.loading) {\n      return <TextCounter data={this.state.data} text={this.props.text} />;\n    } else if (this.state.error) {\n      return (\n        <p className=\"text-center text-gray-900 dark:text-gray-200\">\n          An Error Occurred!\n        </p>\n      );\n    } else {\n      return <PacMan />;\n    }\n  }\n}\n\nexport default AveragePerHour;\n","import React, { useState } from \"react\";\r\nimport AveragePerHour from \"./graphs/averagePerHour\";\r\n\r\nfunction Averages(props) {\r\n  const [averages] = useState([...props.averages]);\r\n  return (\r\n    <>\r\n      {averages.map((average, index) => {\r\n        return (\r\n          <div\r\n            className={average.type + \"-per-hour\"}\r\n            key={average.type + index}\r\n          >\r\n            <AveragePerHour\r\n              platform={props.platform}\r\n              type={average.type}\r\n              text={average.text}\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Averages;\r\n","import React, { Component } from \"react\";\r\nimport PacMan from \"../loader/pacMan\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Line,\r\n  LineChart,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from \"recharts\";\r\nimport { config } from \"../../mainConfig\";\r\n\r\nclass ImportedLineGraph extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.platform = this.props.platform;\r\n    this.type = this.props.type;\r\n    this.state = {\r\n      data: null,\r\n      loading: true,\r\n      error: null,\r\n    };\r\n    this.getTotalImports = this.getTotalImports.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTotalImports();\r\n\r\n    this.updateMetric = setInterval(\r\n      this.getTotalImports,\r\n      config.updateInterval\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.updateMetric);\r\n  }\r\n\r\n  getTotalImports() {\r\n    axios\r\n      .get(`${config.apiUrl}/api/logs/import/total`, {\r\n        params: {\r\n          platform: this.platform,\r\n          type: this.type,\r\n          from: 30,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const data = [...response.data].map((data) => {\r\n          return {\r\n            x: moment(data.date).format(\"YYYY-MM-DD\"),\r\n            y: parseInt(data.count),\r\n          };\r\n        });\r\n\r\n        this.setState({ data: data, loading: false });\r\n      })\r\n      .catch(() => {\r\n        return this.setState({ error: true, loading: false });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.data && !this.state.error && !this.state.loading) {\r\n      return (\r\n        <ResponsiveContainer width=\"100%\" height={this.props.height}>\r\n          <LineChart data={this.state.data}>\r\n            <XAxis dataKey=\"x\" stroke=\"#000000\" tick={false} />\r\n            <YAxis dataKey=\"y\" stroke=\"#000000\" domain={[0, \"dataMax\"]} />\r\n            <Tooltip />\r\n            <Line\r\n              dataKey=\"y\"\r\n              name=\"Posts\"\r\n              stroke={this.props.color}\r\n              strokeWidth={5}\r\n            />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      );\r\n    } else if (this.state.error) {\r\n      return (\r\n        <p className=\"text-center text-gray-900 dark:text-gray-200\">\r\n          An Error Occurred!\r\n        </p>\r\n      );\r\n    } else {\r\n      return <PacMan />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ImportedLineGraph;\r\n","import React, { useState } from \"react\";\nimport Averages from \"./averages\";\nimport ImportedLineGraph from \"./graphs/importedLineGraph\";\n\nfunction PlatformContent(props) {\n  const [graphs] = useState([...props.graphs]);\n\n  return graphs.map((graph, index) => {\n    return (\n      <div\n        className=\"metric grid gap-y-5\"\n        key={graph.platform + graph.header + index}\n      >\n        <div className=\"metric-header grid grid-cols-3 grid-rows-1 items-center\">\n          <h2 className=\"text-left font-semibold text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\n            {graph.header}\n          </h2>\n          <Averages averages={graph.averages} platform={props.platform} />\n        </div>\n        <ImportedLineGraph\n          platform={props.platform}\n          color={props.color}\n          type={graph.total.type}\n          width={200}\n          height={150}\n        />\n      </div>\n    );\n  });\n}\n\nexport default PlatformContent;\n","import React from \"react\";\r\nimport PlatformContent from \"./platformContent\";\r\n\r\nfunction ImportMetrics(props) {\r\n  return (\r\n    <div id={props.platform + \"-metric\"} className=\"grid gap-y-3\">\r\n      <h2 className=\"capitalize text-left font-bold text-3xl text-gray-900 dark:text-gray-200 subpixel-antialiased\">\r\n        {props.platform}\r\n      </h2>\r\n      <PlatformContent\r\n        graphs={props.graphs}\r\n        platform={props.platform}\r\n        color={props.color}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImportMetrics;\r\n","import ImportMetrics from \"./components/importMetrics\";\r\nimport { platforms } from \"./platformConfig\";\r\n\r\nconst loadImporterMetrics = platforms.map((platform, index) => {\r\n  return <ImportMetrics {...platform} key={platform.platform} />;\r\n});\r\n\r\n/* For future use.\r\nconst loadAIMetrics = platforms.map((platform, index) => {\r\n  return <AIMetrics {...platform} key={platform.platform} />;\r\n});*/\r\n/*\r\n   <div className=\"ai-metrics grid grid-cols-2 gap-x-5\">\r\n      {loadImporterMetrics}\r\n    </div>\r\n*/\r\n\r\nconst App = () => (\r\n  <div className=\"p-5 mx-auto grid grid-cols-2 gap-y-5\">\r\n    <div className=\"import-logs\">{loadImporterMetrics}</div>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","export const platforms = [\n  {\n    platform: \"facebook\",\n    color: \"#4267B2\",\n    graphs: [\n      {\n        header: \"Posts\",\n        total: {\n          type: \"post_count\",\n        },\n        averages: [\n          {\n            type: \"process_handle\",\n            text: \"Avg. Handles/h\",\n          },\n          {\n            type: \"post_imported\",\n            text: \"Avg. Posts/h\",\n          },\n        ],\n      },\n      /*{\n        header: \"Streams\",\n        total: {\n          type: \"stream_imported\",\n        },\n        averages: [\n          {\n            type: \"process_stream_handle\",\n            text: \"Avg. Channels/h\",\n          },\n          {\n            type: \"stream_imported\",\n            text: \"Avg. Streams/h\",\n          },\n        ],\n      },*/\n    ],\n  },\n  {\n    platform: \"instagram\",\n    color: \"#C13584\",\n    graphs: [\n      {\n        header: \"Posts\",\n        total: {\n          type: \"post_count\",\n        },\n        averages: [\n          {\n            type: \"process_handle\",\n            text: \"Avg. Handles/h\",\n          },\n          {\n            type: \"post_imported\",\n            text: \"Avg. Posts/h\",\n          },\n        ],\n      },\n      {\n        header: \"Stories\",\n        total: {\n          type: \"story_count\",\n        },\n        averages: [\n          {\n            type: \"process_story_handle\",\n            text: \"Avg. Handles/h\",\n          },\n          {\n            type: \"story_created\",\n            text: \"Avg. Stories/h\",\n          },\n        ],\n      },\n    ],\n  },\n  {\n    platform: \"twitch\",\n    color: \"#6441a5\",\n    graphs: [\n      {\n        header: \"Clips\",\n        total: {\n          type: \"post_count\",\n        },\n        averages: [\n          {\n            type: \"process_handle\",\n            text: \"Avg. Handles/h\",\n          },\n          {\n            type: \"post_imported\",\n            text: \"Avg. Clips/h\",\n          },\n        ],\n      },\n      /*{\n        header: \"Streams\",\n        total: {\n          type: \"stream_imported\",\n        },\n        averages: [\n          {\n            type: \"process_stream_handle\",\n            text: \"Avg. Channels/h\",\n          },\n          {\n            type: \"stream_imported\",\n            text: \"Avg. Streams/h\",\n          },\n        ],\n      },*/\n    ],\n  },\n  {\n    platform: \"twitter\",\n    color: \"#1DA1F2\",\n    graphs: [\n      {\n        header: \"Posts\",\n        total: {\n          type: \"post_count\",\n        },\n        averages: [\n          {\n            type: \"process_handle\",\n            text: \"Avg. Handles/h\",\n          },\n          {\n            type: \"post_count\",\n            text: \"Avg. Posts/h\",\n          },\n        ],\n      },\n      {\n        header: \"Metrics\",\n        total: {\n          type: \"post_metric_count\",\n        },\n        averages: [\n          {\n            type: \"process_metric_handle\",\n            text: \"Avg. Handles/h\",\n          },\n          {\n            type: \"post_metric_imported\",\n            text: \"Avg. Posts/h\",\n          },\n        ],\n      },\n    ],\n  },\n  {\n    platform: \"youtube\",\n    color: \"#FF0000\",\n    graphs: [\n      {\n        header: \"Videos\",\n        total: {\n          type: \"post_count\",\n        },\n        averages: [\n          {\n            type: \"process_handle\",\n            text: \"Avg. Channels/h\",\n          },\n          {\n            type: \"post_imported\",\n            text: \"Avg. Videos/h\",\n          },\n        ],\n      },\n      /*{\n        header: \"Streams\",\n        total: {\n          type: \"stream_imported\",\n        },\n        averages: [\n          {\n            type: \"process_stream_handle\",\n            text: \"Avg. Channels/h\",\n          },\n          {\n            type: \"stream_imported\",\n            text: \"Avg. Streams/h\",\n          },\n        ],\n      },*/\n    ],\n  },\n  /*{\n    platform: \"trovo\",\n    color: \"#FF0000\",\n    graphs: [\n      {\n        header: \"Streams\",\n        total: {\n          type: \"stream_imported\",\n        },\n        averages: [\n          {\n            type: \"process_stream_handle\",\n            text: \"Avg. Channels/h\",\n          },\n          {\n            type: \"stream_imported\",\n            text: \"Avg. Streams/h\",\n          },\n        ],\n      },\n      {\n        header: \"Clips?!?\",\n        total: {\n          type: \"post_imported\",\n        },\n        averages: [\n          {\n            type: \"process_handle\",\n            text: \"Avg. Channels/h\",\n          },\n          {\n            type: \"post_imported\",\n            text: \"Avg. Clips/h/h\",\n          },\n        ],\n      },\n    ],\n  },*/\n];\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}