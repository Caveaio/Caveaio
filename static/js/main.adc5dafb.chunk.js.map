{"version":3,"sources":["components/loader/pacMan.jsx","components/counters/textCounter.jsx","mainConfig.js","components/graphs/average.jsx","components/averages.jsx","components/graphs/importedLineGraph.jsx","components/graphs/runtime.jsx","components/runtimes.jsx","components/platformContent.jsx","components/importMetrics.jsx","App.jsx","platformConfig.js","reportWebVitals.js","index.js"],"names":["PacMan","className","type","size","active","TextCounter","props","text","data","config","Average","platform","state","loading","error","getAverage","bind","this","updateMetric","setInterval","clearInterval","url","endpoint","includes","axios","get","params","from","interval","then","response","avg","setState","catch","Component","Averages","useState","averages","map","average","index","ImportedLineGraph","getTotalImports","x","moment","date","format","y","parseInt","count","ResponsiveContainer","width","height","LineChart","XAxis","dataKey","stroke","tick","YAxis","Tooltip","Line","name","color","strokeWidth","Runtime","getRuntime","e","barHeight","style","position","background","display","alignItems","runtime","right","top","backgroundColor","zIndex","paddingLeft","sleep_time","philipMethod","Runtimes","runtimes","PlatformContent","graphs","graph","header","total","ImportMetrics","id","loadImporterMetrics","key","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.adc5dafb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Loader from \"react-loaders\";\r\n\r\nfunction PacMan() {\r\n  return (\r\n    <div className=\"h-40 flex justify-center items-center\">\r\n      <Loader type=\"pacman\" size={\"custom\"} active />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PacMan;\r\n","import React from \"react\";\r\n\r\nconst TextCounter = (props) => {\r\n  return (\r\n    <p className=\"text-center text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\r\n      {props.text}: {props.data}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default TextCounter;\r\n","export const config = {\r\n  updateInterval: 60_000,\r\n  apiUrl: \"https://cavea-test-api-php-review-develop-3zknud.cavea.dev\",\r\n};\r\n","import React, { Component } from \"react\"\nimport PacMan from \"../loader/pacMan\"\nimport axios from \"axios\"\nimport TextCounter from \"../counters/textCounter\"\nimport { config } from \"../../mainConfig\"\n\nclass Average extends Component {\n  constructor(props) {\n    super(props)\n    this.platform = this.props.platform\n    this.type = this.props.type\n    this.state = {\n      data: null,\n      loading: true,\n      error: null,\n    }\n    this.getAverage = this.getAverage.bind(this)\n  }\n\n  componentDidMount() {\n    this.getAverage()\n\n    this.updateMetric = setInterval(this.getAverage, config.updateInterval)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.updateMetric)\n  }\n\n  getAverage() {\n    let endpoint = \"average\",\n      url\n    if (this.type.includes(\"_count\")) endpoint = \"aph\"\n\n    url = `${config.apiUrl}/api/logs/import/${endpoint}`\n\n    axios\n      .get(`${url}`, {\n        params: {\n          platform: this.platform,\n          from: 30,\n          type: this.type,\n          interval: 3600, // One hour\n        },\n      })\n      .then((response) => {\n        const { avg } = response.data\n        this.setState({ data: avg, loading: false, error: false })\n      })\n      .catch(() => {\n        return this.setState({ error: true, loading: false })\n      })\n  }\n\n  render() {\n    if (this.state.data && !this.state.error && !this.state.loading) {\n      return <TextCounter data={this.state.data} text={this.props.text} />\n    } else if (this.state.error) {\n      return (\n        <p className=\"text-center text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\n          An Error Occurred!\n        </p>\n      )\n    } else {\n      return <PacMan />\n    }\n  }\n}\n\nexport default Average\n","import React, { useState } from \"react\";\r\nimport Average from \"./graphs/average\";\r\n\r\nfunction Averages(props) {\r\n  const [averages] = useState([...props.data]);\r\n  return (\r\n    <>\r\n      {averages.map((average, index) => {\r\n        return (\r\n          <Average\r\n            key={\"average-\" + index}\r\n            platform={props.platform}\r\n            type={average.type}\r\n            text={average.text}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Averages;\r\n","import React, { Component } from \"react\"\nimport PacMan from \"../loader/pacMan\"\nimport moment from \"moment\"\nimport axios from \"axios\"\nimport {\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\"\nimport { config } from \"../../mainConfig\"\n\nclass ImportedLineGraph extends Component {\n  constructor(props) {\n    super(props)\n    this.platform = this.props.platform\n    this.type = this.props.type\n    this.state = {\n      data: null,\n      loading: true,\n      error: null,\n    }\n    this.getTotalImports = this.getTotalImports.bind(this)\n  }\n\n  componentDidMount() {\n    this.getTotalImports()\n\n    this.updateMetric = setInterval(this.getTotalImports, config.updateInterval)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.updateMetric)\n  }\n\n  getTotalImports() {\n    axios\n      .get(`${config.apiUrl}/api/logs/import/total`, {\n        params: {\n          platform: this.platform,\n          type: this.type,\n          from: 30,\n        },\n      })\n      .then((response) => {\n        const data = [...response.data].map((data) => {\n          return {\n            x: moment(data.date).format(\"YYYY-MM-DD\"),\n            y: parseInt(data.count),\n          }\n        })\n\n        this.setState({ data: data, loading: false, error: false })\n      })\n      .catch(() => {\n        return this.setState({ error: true, loading: false })\n      })\n  }\n\n  render() {\n    if (this.state.data && !this.state.error && !this.state.loading) {\n      return (\n        <ResponsiveContainer width=\"100%\" height={this.props.height}>\n          <LineChart data={this.state.data}>\n            <XAxis dataKey=\"x\" stroke=\"#222\" tick={false} />\n            <YAxis dataKey=\"y\" stroke=\"#222\" />\n            <Tooltip />\n            <Line\n              dataKey=\"y\"\n              name=\"Posts\"\n              stroke={this.props.color}\n              strokeWidth={5}\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      )\n    } else if (this.state.error) {\n      return (\n        <p className=\"text-center text-gray-900 dark:text-gray-200\">\n          An Error Occurred!\n        </p>\n      )\n    } else {\n      return <PacMan />\n    }\n  }\n}\n\nexport default ImportedLineGraph\n","import React, { Component } from \"react\"\nimport PacMan from \"../loader/pacMan\"\nimport axios from \"axios\"\nimport { config } from \"../../mainConfig\"\n\nclass Runtime extends Component {\n  constructor(props) {\n    super(props)\n    this.platform = this.props.platform\n    this.type = this.props.type\n    this.state = {\n      data: null,\n      loading: true,\n      error: null,\n    }\n    this.getRuntime = this.getRuntime.bind(this)\n  }\n\n  componentDidMount() {\n    this.getRuntime()\n\n    this.updateMetric = setInterval(this.getRuntime, config.updateInterval)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.updateMetric)\n  }\n\n  getRuntime() {\n    axios\n      .get(\n        `https://cavea-test-api-php-review-develop-3zknud.cavea.dev/api/logs/import/runtime`,\n        {\n          params: {\n            platform: this.platform,\n            type: this.type,\n          },\n        }\n      )\n      .then((response) => {\n        this.setState({ data: response.data, loading: false, error: false })\n      })\n      .catch((e) => {\n        return this.setState({ error: e, loading: false })\n      })\n  }\n\n  philipMethod() {\n    const barHeight = \"50px\"\n\n    return (\n      <div\n        className=\"health_container\"\n        style={{\n          width: \"100px\",\n          height: barHeight,\n          position: \"relative\",\n          background:\n            \"linear-gradient(90deg, rgba(255,0,0,1) 0%, rgba(255,255,0,1) 25%, rgba(26,255,0,1) 100%)\",\n          display: \"flex\",\n          alignItems: \"center\",\n        }}\n      >\n        <div\n          className=\"health_bar\"\n          style={{\n            height: barHeight,\n            width: `${this.state.data.runtime}%`,\n            position: \"absolute\",\n            right: 0,\n            top: 0,\n            backgroundColor: \"lightgrey\",\n            zIndex: 1,\n          }}\n        />\n        <p\n          className=\"subpixel-antialiased\"\n          style={{ zIndex: 2, paddingLeft: \"20px\", color: \"rebeccapurple\" }}\n        >\n          {this.state.data.sleep_time}%\n        </p>\n      </div>\n    )\n  }\n\n  render() {\n    if (this.state.data && !this.state.error && !this.state.loading) {\n      return this.philipMethod()\n    } else if (this.state.error) {\n      return (\n        <p className=\"text-center text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\n          An Error Occurred!\n        </p>\n      )\n    } else {\n      return <PacMan />\n    }\n  }\n}\n\nexport default Runtime\n","import React, { useState } from \"react\"\nimport Runtime from \"./graphs/runtime\"\n\nfunction Runtimes(props) {\n  const [runtimes] = useState([...props.data])\n  return (\n    <>\n      {runtimes.map((runtime, index) => {\n        return (\n          <Runtime\n            key={\"runtime-\" + index}\n            platform={props.platform}\n            type={runtime.type}\n            text={runtime.text}\n          />\n        )\n      })}\n    </>\n  )\n}\n\nexport default Runtimes\n","import React, { useState } from \"react\"\nimport Averages from \"./averages\"\nimport ImportedLineGraph from \"./graphs/importedLineGraph\"\nimport Runtimes from \"./runtimes\"\n\nfunction PlatformContent(props) {\n  const [graphs] = useState([...props.graphs])\n\n  return graphs.map((graph, index) => {\n    return (\n      <div\n        className=\"metric grid gap-y-5\"\n        key={graph.platform + graph.header + index}\n      >\n        <div className=\"metric-header grid grid-flow-col-dense items-center\">\n          <h2 className=\"text-left font-semibold text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\n            {graph.header}\n          </h2>\n          <Averages data={graph.averages} platform={props.platform} />\n          <Runtimes data={graph.runtime} platform={props.platform} />\n        </div>\n        <ImportedLineGraph\n          platform={props.platform}\n          color={props.color}\n          type={graph.total.type}\n          width={200}\n          height={150}\n        />\n      </div>\n    )\n  })\n}\n\nexport default PlatformContent\n","import React from \"react\";\r\nimport PlatformContent from \"./platformContent\";\r\n\r\nfunction ImportMetrics(props) {\r\n  return (\r\n    <div id={props.platform + \"-metric\"} className=\"grid gap-y-3\">\r\n      <h2 className=\"capitalize text-left font-bold text-3xl text-gray-900 dark:text-gray-200 subpixel-antialiased\">\r\n        {props.platform}\r\n      </h2>\r\n      <PlatformContent\r\n        graphs={props.graphs}\r\n        platform={props.platform}\r\n        color={props.color}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImportMetrics;\r\n","import ImportMetrics from \"./components/importMetrics\";\r\nimport { platforms } from \"./platformConfig\";\r\n\r\nconst loadImporterMetrics = platforms.map((platform, index) => {\r\n  return <ImportMetrics {...platform} key={platform.platform} />;\r\n});\r\n\r\n/* For future use.\r\nconst loadAIMetrics = platforms.map((platform, index) => {\r\n  return <AIMetrics {...platform} key={platform.platform} />;\r\n});*/\r\n/*\r\n   <div className=\"ai-metrics grid grid-cols-2 gap-x-5\">\r\n      {loadImporterMetrics}\r\n    </div>\r\n*/\r\n\r\nconst App = () => (\r\n  <div className=\"p-5 mx-auto grid grid-cols-2 gap-y-5\">\r\n    <div className=\"import-logs\">{loadImporterMetrics}</div>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","export const platforms = [\n  {\n    platform: \"facebook\",\n    color: \"#4267B2\",\n    graphs: [\n      {\n        header: \"Posts\",\n        total: {\n          type: \"post_count\",\n        },\n        averages: [\n          {\n            type: \"process_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"post_count\",\n            text: \"P/h\",\n          },\n        ],\n        runtime: [],\n      },\n    ],\n  },\n  {\n    platform: \"instagram\",\n    color: \"#C13584\",\n    graphs: [\n      {\n        header: \"Posts\",\n        total: {\n          type: \"post_count\",\n        },\n        averages: [\n          {\n            type: \"process_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"post_count\",\n            text: \"P/h\",\n          },\n        ],\n        runtime: [],\n      },\n      {\n        header: \"Stories\",\n        total: {\n          type: \"story_count\",\n        },\n        averages: [\n          {\n            type: \"process_story_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"story_count\",\n            text: \"S/h\",\n          },\n        ],\n        runtime: [],\n      },\n    ],\n  },\n  {\n    platform: \"twitch\",\n    color: \"#6441a5\",\n    graphs: [\n      {\n        header: \"Clips\",\n        total: {\n          type: \"post_count\",\n        },\n        averages: [\n          {\n            type: \"process_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"post_count\",\n            text: \"P/h\",\n          },\n        ],\n        runtime: [],\n      },\n      /*{\n        header: \"Streams\",\n        total: {\n          type: \"stream_imported\",\n        },\n        averages: [\n          {\n            type: \"process_stream_handle\",\n            text: \"Avg. Channels/h\",\n          },\n          {\n            type: \"stream_imported\",\n            text: \"Avg. Streams/h\",\n          },\n        ],\n      },*/\n    ],\n  },\n  {\n    platform: \"twitter\",\n    color: \"#1DA1F2\",\n    graphs: [\n      {\n        header: \"Posts\",\n        total: {\n          type: \"post_count\",\n        },\n        averages: [\n          {\n            type: \"process_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"post_count\",\n            text: \"P/h\",\n          },\n        ],\n        runtime: [],\n      },\n      {\n        header: \"Metrics\",\n        total: {\n          type: \"post_metric_count\",\n        },\n        averages: [\n          {\n            type: \"process_metric_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"post_metric_count\",\n            text: \"P/h\",\n          },\n        ],\n        runtime: [],\n      },\n    ],\n  },\n  {\n    platform: \"youtube\",\n    color: \"#FF0000\",\n    graphs: [\n      {\n        header: \"Videos\",\n        total: {\n          type: \"post_count\",\n        },\n        averages: [\n          {\n            type: \"process_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"post_count\",\n            text: \"P/h\",\n          },\n        ],\n        runtime: [\n          {\n            type: \"sleep_timer\",\n            text: \"Idle% = x / 1,44\",\n          },\n        ],\n      },\n      /*{\n        header: \"Streams\",\n        total: {\n          type: \"stream_imported\",\n        },\n        averages: [\n          {\n            type: \"process_stream_handle\",\n            text: \"Avg. Channels/h\",\n          },\n          {\n            type: \"stream_imported\",\n            text: \"Avg. Streams/h\",\n          },\n        ],\n      },*/\n    ],\n  },\n  /*{\n    platform: \"trovo\",\n    color: \"#FF0000\",\n    graphs: [\n      {\n        header: \"Streams\",\n        total: {\n          type: \"stream_imported\",\n        },\n        averages: [\n          {\n            type: \"process_stream_handle\",\n            text: \"Avg. Channels/h\",\n          },\n          {\n            type: \"stream_imported\",\n            text: \"Avg. Streams/h\",\n          },\n        ],\n      },\n      {\n        header: \"Clips?!?\",\n        total: {\n          type: \"post_imported\",\n        },\n        averages: [\n          {\n            type: \"process_handle\",\n            text: \"Avg. Channels/h\",\n          },\n          {\n            type: \"post_imported\",\n            text: \"Avg. Clips/h/h\",\n          },\n        ],\n      },\n    ],\n  },*/\n];\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}