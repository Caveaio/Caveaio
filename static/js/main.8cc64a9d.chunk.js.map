{"version":3,"sources":["components/loader/pacMan.jsx","components/counters/TextCounter.jsx","config/Settings.js","components/graphs/importers/Average.jsx","components/text/importers/Averages.jsx","helpers/reverseCalcDates.js","components/graphs/importers/LineGraph.jsx","components/graphs/importers/Runtime.jsx","components/text/importers/Runtimes.jsx","components/graphs/ImportGraphs.jsx","components/ImportMetrics.jsx","components/graphs/ai/AIBarGraph.jsx","components/graphs/AIGraphs.jsx","components/text/ai/LatestLog.jsx","components/text/AIText.jsx","components/AIMetrics.jsx","components/text/ai/AIStarted.jsx","App.jsx","config/Importers.js","config/AI.js","reportWebVitals.js","index.js"],"names":["PacMan","className","type","size","active","TextCounter","props","text","data","config","Average","platform","state","loading","error","getAverage","bind","this","updateMetric","setInterval","clearInterval","url","endpoint","includes","axios","get","params","then","response","avg","setState","catch","Component","Averages","useState","averages","map","average","index","reverseCalcDates","i","results","reverse_api_result","now","Date","get_date","date","dayjs","format","count","push","setDate","getDate","reverse","LineGraph","getTotalImports","logs","x","y","parseInt","ResponsiveContainer","width","height","LineChart","XAxis","dataKey","stroke","tick","YAxis","Tooltip","Line","name","color","strokeWidth","Runtime","getRuntime","e","barHeight","style","position","background","display","alignItems","runtime","right","top","backgroundColor","zIndex","paddingLeft","sleep_time","philipMethod","Runtimes","runtimes","ImportGraphs","graphs","graph","header","total","ImportMetrics","id","AIBarGraph","boxName","getLogs","BarChart","Bar","fill","AIGraphs","subTitle","LatestLog","aibox_id","getLatestLog","activity","severity","sub_activity","timestamp","AIText","ai_graphs","ai_text","AIMetrics","AIStarted","getAiStarted","console","log","activeItems","length","textShadow","loadImporterMetrics","key","loadAIMetrics","ai","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6RAWeA,MARf,WACE,OACE,qBAAKC,UAAU,wCAAf,SACE,cAAC,IAAD,CAAQC,KAAK,SAASC,KAAM,SAAUC,QAAM,O,iBCInCC,EARK,SAACC,GACnB,OACE,oBAAGL,UAAU,0EAAb,UACGK,EAAMC,KADT,KACiBD,EAAME,SCLdC,EACK,IADLA,EAEH,6DAFGA,EAIE,IC+DAC,E,kDA5Db,WAAYJ,GAAQ,IAAD,8BACjB,cAAMA,IACDK,SAAW,EAAKL,MAAMK,SAC3B,EAAKT,KAAO,EAAKI,MAAMJ,KACvB,EAAKU,MAAQ,CACXJ,KAAM,KACNK,SAAS,EACTC,OAAO,GAET,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBATD,E,qDAYnB,WACEC,KAAKF,aAELE,KAAKC,aAAeC,YAAYF,KAAKF,WAAYN,K,kCAGnD,WACEW,cAAcH,KAAKC,gB,wBAGrB,WAAc,IAEVG,EAFS,OACPC,EAAW,UAEXL,KAAKf,KAAKqB,SAAS,YAAWD,EAAW,OAE7CD,EAAG,UAAMZ,EAAN,4BAAuCa,GAE1CE,IACGC,IADH,UACUJ,GAAO,CACbK,OAAQ,CACNf,SAAUM,KAAKN,SACfT,KAAMe,KAAKf,QAGdyB,MAAK,SAACC,GACL,IAAQC,EAAQD,EAASpB,KAAjBqB,IACR,EAAKC,SAAS,CAAEtB,KAAMqB,EAAKhB,SAAS,EAAOC,OAAO,OAEnDiB,OAAM,WACL,OAAO,EAAKD,SAAS,CAAEhB,OAAO,EAAMD,SAAS,S,oBAInD,WACE,OAAII,KAAKL,MAAMJ,MAASS,KAAKL,MAAME,OAAUG,KAAKL,MAAMC,QAE7CI,KAAKL,MAAME,MAElB,mBAAGb,UAAU,4EAAb,gCAKK,cAAC,EAAD,IARA,cAAC,EAAD,CAAaO,KAAMS,KAAKL,MAAMJ,KAAMD,KAAMU,KAAKX,MAAMC,W,GAhD5CyB,aCePC,MAlBf,SAAkB3B,GAChB,MAAmB4B,mBAAS,YAAI5B,EAAME,OAA/B2B,EAAP,oBACA,OACE,mCACGA,EAASC,KAAI,SAACC,EAASC,GACtB,OACE,cAAC,EAAD,CAEE3B,SAAUL,EAAMK,SAChBT,KAAMmC,EAAQnC,KACdK,KAAM8B,EAAQ9B,MAHT,WAAa+B,S,oECRvB,SAASC,EAAiB/B,GAC/B,IAAIgC,EACFC,EAAU,GACVC,EAAqB,GACnBC,EAAM,IAAIC,KAERC,EAAW,SAACC,GAChB,OAAOC,IAAMD,GAAME,OAAO,eAO5B,IAJAxC,EAAK4B,KAAI,SAAC5B,GACR,OAAQkC,EAAmBlC,EAAKsC,MAAQtC,EAAKyC,SAG1CT,EATY,GASIA,EAAI,IAAKA,EAC5BC,EAAQS,KAAK,CACXJ,KAAMD,EAASF,GACfM,MAAOP,EAAmBG,EAASF,KAAS,IAG9CA,EAAIQ,QAAQR,EAAIS,UAAY,GAG9B,OAAOX,EAAQY,U,ICkEFC,E,kDA3Eb,WAAYhD,GAAQ,IAAD,8BACjB,cAAMA,IACDK,SAAW,EAAKL,MAAMK,SAC3B,EAAKT,KAAO,EAAKI,MAAMJ,KACvB,EAAKU,MAAQ,CACXJ,KAAM,KACNK,SAAS,EACTC,MAAO,MAET,EAAKyC,gBAAkB,EAAKA,gBAAgBvC,KAArB,gBATN,E,qDAYnB,WACEC,KAAKsC,kBAELtC,KAAKC,aAAeC,YAAYF,KAAKsC,gBAAiB9C,K,kCAGxD,WACEW,cAAcH,KAAKC,gB,6BAGrB,WAAmB,IAAD,OAChBM,IACGC,IADH,UACUhB,EADV,kCACyD,CACrDiB,OAAQ,CACNf,SAAUM,KAAKN,SACfT,KAAMe,KAAKf,QAGdyB,MAAK,SAACC,GACL,IACM4B,EADiBjB,EAAiBX,EAASpB,MACrB4B,KAAI,SAAC5B,GAC/B,MAAO,CACLiD,EAAGV,IAAMvC,EAAKsC,MAAME,OAAO,cAC3BU,EAAGC,SAASnD,EAAKyC,WAIrB,EAAKnB,SAAS,CAAEtB,KAAMgD,EAAM3C,SAAS,EAAOC,OAAO,OAEpDiB,OAAM,WACL,OAAO,EAAKD,SAAS,CAAEhB,OAAO,EAAMD,SAAS,S,oBAInD,WACE,OAAII,KAAKL,MAAMJ,MAASS,KAAKL,MAAME,OAAUG,KAAKL,MAAMC,QAgB7CI,KAAKL,MAAME,MAElB,mBAAGb,UAAU,+CAAb,gCAKK,cAAC,EAAD,IArBL,cAAC2D,EAAA,EAAD,CAAqBC,MAAM,OAAOC,OAAQrD,EAA1C,SACE,eAACsD,EAAA,EAAD,CAAWvD,KAAMS,KAAKL,MAAMJ,KAA5B,UACE,cAACwD,EAAA,EAAD,CAAOC,QAAQ,IAAIC,OAAO,OAAOC,MAAM,IACvC,cAACC,EAAA,EAAD,CAAOH,QAAQ,IAAIC,OAAO,SAC1B,cAACG,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CACEL,QAAQ,IACRM,KAAK,QACLL,OAAQjD,KAAKX,MAAMkE,MACnBC,YAAa,a,GA3DHzC,aCqFT0C,E,kDA9Fb,WAAYpE,GAAQ,IAAD,8BACjB,cAAMA,IACDK,SAAW,EAAKL,MAAMK,SAC3B,EAAKT,KAAO,EAAKI,MAAMJ,KACvB,EAAKU,MAAQ,CACXJ,KAAM,KACNK,SAAS,EACTC,MAAO,MAET,EAAK6D,WAAa,EAAKA,WAAW3D,KAAhB,gBATD,E,qDAYnB,WACEC,KAAK0D,aAEL1D,KAAKC,aAAeC,YAAYF,KAAK0D,WAAYlE,K,kCAGnD,WACEW,cAAcH,KAAKC,gB,wBAGrB,WAAc,IAAD,OACXM,IACGC,IADH,UAEOhB,EAFP,4BAGI,CACEiB,OAAQ,CACNf,SAAUM,KAAKN,SACfT,KAAMe,KAAKf,QAIhByB,MAAK,SAACC,GACL,EAAKE,SAAS,CAAEtB,KAAMoB,EAASpB,KAAMK,SAAS,EAAOC,OAAO,OAE7DiB,OAAM,SAAC6C,GACN,OAAO,EAAK9C,SAAS,CAAEhB,MAAO8D,EAAG/D,SAAS,S,0BAIhD,WACE,IAAMgE,EAAY,OAElB,OACE,sBACE5E,UAAU,mBACV6E,MAAO,CACLjB,MAAO,QACPC,OAAQe,EACRE,SAAU,WACVC,WACE,2FACFC,QAAS,OACTC,WAAY,UAThB,UAYE,qBACEjF,UAAU,aACV6E,MAAO,CACLhB,OAAQe,EACRhB,MAAM,GAAD,OAAK5C,KAAKL,MAAMJ,KAAK2E,QAArB,KACLJ,SAAU,WACVK,MAAO,EACPC,IAAK,EACLC,gBAAiB,YACjBC,OAAQ,KAGZ,oBACEtF,UAAU,uBACV6E,MAAO,CAAES,OAAQ,EAAGC,YAAa,OAAQhB,MAAO,iBAFlD,UAIGvD,KAAKL,MAAMJ,KAAKiF,WAJnB,Y,oBAUN,WACE,OAAIxE,KAAKL,MAAMJ,MAASS,KAAKL,MAAME,OAAUG,KAAKL,MAAMC,QAE7CI,KAAKL,MAAME,MAElB,mBAAGb,UAAU,4EAAb,gCAKK,cAAC,EAAD,IARAgB,KAAKyE,mB,GAlFI1D,aCgBP2D,MAlBf,SAAkBrF,GAChB,MAAmB4B,mBAAS,YAAI5B,EAAME,OAA/BoF,EAAP,oBACA,OACE,mCACGA,EAASxD,KAAI,SAAC+C,EAAS7C,GACtB,OACE,cAAC,EAAD,CAEE3B,SAAUL,EAAMK,SAChBT,KAAMiF,EAAQjF,KACdK,KAAM4E,EAAQ5E,MAHT,WAAa+B,SC2BfuD,MAhCf,SAAsBvF,GACpB,MAAiB4B,mBAAS,YAAI5B,EAAMwF,SAEpC,OAFA,oBAEc1D,KAAI,SAAC2D,EAAOzD,GACxB,OACE,sBACErC,UAAU,0BADZ,UAIE,sBAAKA,UAAU,kEAAf,UACE,sBAAKA,UAAU,kCAAf,UACE,oBAAIA,UAAU,wFAAd,SACG8F,EAAMC,SAET,cAAC,EAAD,CAAUxF,KAAMuF,EAAMZ,QAASxE,SAAUL,EAAMK,cAEjD,cAAC,EAAD,CAAUH,KAAMuF,EAAM5D,SAAUxB,SAAUL,EAAMK,cAElD,qBAAKV,UAAU,iCAAf,SACE,cAAC,EAAD,CACEU,SAAUL,EAAMK,SAChB6D,MAAOlE,EAAMkE,MACbtE,KAAM6F,EAAME,MAAM/F,KAClB2D,MAAO,IACPC,OAAQ,UAjBPiC,EAAMpF,SAAWoF,EAAMC,OAAS1D,OCM9B4D,MAff,SAAuB5F,GACrB,OACE,sBAAK6F,GAAI7F,EAAMK,SAAW,UAAWV,UAAU,OAA/C,UACE,oBAAIA,UAAU,gGAAd,SACGK,EAAMK,WAET,cAAC,EAAD,CACEmF,OAAQxF,EAAMwF,OACdnF,SAAUL,EAAMK,SAChB6D,MAAOlE,EAAMkE,Y,kBCuEN4B,E,kDAnEb,WAAY9F,GAAQ,IAAD,8BACjB,cAAMA,IACD+F,QAAU,EAAK/F,MAAM+F,QAC1B,EAAK3E,OAAS,EAAKpB,MAAMoB,OACzB,EAAKd,MAAQ,CACXJ,KAAM,KACNK,SAAS,EACTC,MAAO,MAET,EAAKwF,QAAU,EAAKA,QAAQtF,KAAb,gBATE,E,qDAYnB,WACEC,KAAKqF,UAELrF,KAAKC,aAAeC,YAAYF,KAAKqF,QAAS7F,K,kCAGhD,WACEW,cAAcH,KAAKC,gB,qBAGrB,WAAW,IAAD,OACRM,IACGC,IADH,UACUhB,EADV,8BACqD,CACjDiB,OAAQT,KAAKS,SAEdC,MAAK,SAACC,GACL,IACM4B,EADiBjB,EAAiBX,EAASpB,MACrB4B,KAAI,SAAC5B,GAC/B,MAAO,CACLiD,EAAGV,IAAMvC,EAAKsC,MAAME,OAAO,cAC3BU,EAAGC,SAASnD,EAAKyC,WAIrB,EAAKnB,SAAS,CAAEtB,KAAMgD,EAAM3C,SAAS,EAAOC,OAAO,OAEpDiB,OAAM,WACL,OAAO,EAAKD,SAAS,CAAEhB,OAAO,EAAMD,SAAS,S,oBAInD,WACE,OAAII,KAAKL,MAAMJ,MAASS,KAAKL,MAAME,OAAUG,KAAKL,MAAMC,QAW7CI,KAAKL,MAAME,MAElB,mBAAGb,UAAU,+CAAb,gCAKK,cAAC,EAAD,IAhBL,cAAC2D,EAAA,EAAD,CAAqBC,MAAM,OAAOC,OAAQrD,EAA1C,SACE,eAAC8F,EAAA,EAAD,CAAU/F,KAAMS,KAAKL,MAAMJ,KAA3B,UACE,cAACwD,EAAA,EAAD,CAAOC,QAAQ,IAAIC,OAAO,OAAOC,MAAM,IACvC,cAACC,EAAA,EAAD,CAAOH,QAAQ,IAAIC,OAAO,SAC1B,cAACG,EAAA,EAAD,IACA,cAACmC,EAAA,EAAD,CAAKvC,QAAQ,IAAIM,KAAK,QAAQkC,KAAMxF,KAAKX,MAAMkE,iB,GApDlCxC,aCUV0E,MAtBf,SAAkBpG,GAChB,MAAiB4B,mBAAS,YAAI5B,EAAMwF,SAEpC,OAFA,oBAEc1D,KAAI,SAAC2D,EAAOzD,GACxB,OACE,sBACErC,UAAU,0BADZ,UAIE,qBAAKA,UAAU,4DAAf,SACE,oBAAIA,UAAU,wFAAd,SACG8F,EAAMY,aAGX,qBAAK1G,UAAU,aAAf,SACE,cAAC,EAAD,eAAgB8F,QARbA,EAAMY,SAAW,IAAMrE,OCsDrBsE,E,kDA1Db,WAAYtG,GAAQ,IAAD,8BACjB,cAAMA,IACDuG,SAAW,EAAKvG,MAAMoB,OAAOmF,SAClC,EAAKjG,MAAQ,CACXJ,KAAM,KACNK,SAAS,EACTC,MAAO,MAET,EAAKgG,aAAe,EAAKA,aAAa9F,KAAlB,gBARH,E,qDAWnB,WACEC,KAAK6F,eAEL7F,KAAKC,aAAeC,YAAYF,KAAK6F,aAAc,O,kCAGrD,WACE1F,cAAcH,KAAKC,gB,0BAGrB,WAAgB,IAAD,OACbM,IACGC,IADH,UACUhB,EADV,2BACkD,CAC9CiB,OAAQ,CACNmF,SAAU5F,KAAK4F,YAGlBlF,MAAK,SAACC,GACL,EAAKE,SAAS,CAAEtB,KAAMoB,EAASpB,KAAMK,SAAS,EAAOC,OAAO,OAE7DiB,OAAM,SAAC6C,GACN,OAAO,EAAK9C,SAAS,CAAEhB,MAAO8D,EAAG/D,SAAS,S,oBAIhD,WACE,OAAII,KAAKL,MAAMJ,MAASS,KAAKL,MAAME,OAAUG,KAAKL,MAAMC,QAS7CI,KAAKL,MAAME,MAElB,mBAAGb,UAAU,4EAAb,gCAKK,cAAC,EAAD,IAdL,iCACE,2CAAcgB,KAAKL,MAAMJ,KAAKuG,YAC9B,2CAAc9F,KAAKL,MAAMJ,KAAKwG,YAC9B,+CAAkB/F,KAAKL,MAAMJ,KAAKyG,gBAClC,4CAAehG,KAAKL,MAAMJ,KAAK0G,oB,GA5CjBlF,aCoBTmF,MAtBf,SAAgB7G,GACd,MAAkB4B,mBAAS,YAAI5B,EAAMC,OAErC,OAFA,oBAEe6B,KAAI,SAAC7B,EAAM+B,GACxB,OACE,sBACErC,UAAU,0BADZ,UAIE,qBAAKA,UAAU,4DAAf,SACE,oBAAIA,UAAU,wFAAd,SACGM,EAAKoG,aAGV,qBAAK1G,UAAU,aAAf,SACE,cAAC,EAAD,eAAeM,QARZA,EAAKoG,SAAW,IAAMrE,OCNnC,SAAS8E,EAAU9G,GACjB,GAAIA,EAAMwF,OACR,OAAO,cAAC,EAAD,CAAUA,OAAQxF,EAAMwF,SAInC,SAASuB,EAAQ/G,GACf,GAAIA,EAAMC,KACR,OAAO,cAAC,EAAD,CAAQA,KAAMD,EAAMC,OAgBhB+G,MAZf,SAAmBhH,GACjB,OACE,sBAAK6F,GAAI7F,EAAM+F,QAAU,UAAWpG,UAAU,eAA9C,UACE,oBAAIA,UAAU,gGAAd,SACGK,EAAM+F,UAET,qBAAKpG,UAAU,mBAAf,SAAmCmH,EAAU9G,KAC7C,qBAAKL,UAAU,OAAf,SAAuBoH,EAAQ/G,SCoDtBiH,E,kDArEb,WAAYjH,GAAQ,IAAD,8BACjB,cAAMA,IACDM,MAAQ,CACXJ,KAAM,KACNK,SAAS,EACTC,MAAO,MAET,EAAK0G,aAAe,EAAKA,aAAaxG,KAAlB,gBAPH,E,qDAUnB,WACEC,KAAKuG,eAELvG,KAAKC,aAAeC,YAAYF,KAAKuG,aAAc/G,K,kCAGrD,WACEW,cAAcH,KAAKC,gB,0BAGrB,WAAgB,IAAD,OACbM,IACGC,IADH,wEAIGE,MAAK,SAACC,GACL,EAAKE,SAAS,CAAEtB,KAAMoB,EAASpB,KAAMK,SAAS,EAAOC,OAAO,IAC5D2G,QAAQC,IAAI,EAAK9G,MAAMJ,SAExBuB,OAAM,SAAC6C,GACN,OAAO,EAAK9C,SAAS,CAAEhB,MAAO8D,EAAG/D,SAAS,S,yBAIhD,WACE,IAAM8G,EAAc1G,KAAKL,MAAMJ,KAAKoH,OACpC,OAAID,EAAc,IAAMA,EAAc,GAC7B,CACLE,WAAY,mBAELF,EAAc,GAChB,CACLE,WAAY,wBAFT,I,oBAOT,WACE,OAAI5G,KAAKL,MAAMJ,MAASS,KAAKL,MAAME,OAAUG,KAAKL,MAAMC,QAS7CI,KAAKL,MAAME,MAElB,mBAAGb,UAAU,4EAAb,gCAKK,cAAC,EAAD,IAdL,qBACE6E,MAAO7D,KAAK0G,cACZ1H,UAAU,4EAFZ,gCAIsBgB,KAAKL,MAAMJ,KAAKoH,c,GAvDtB5F,aCClB8F,ECNmB,CACvB,CACEnH,SAAU,WACV6D,MAAO,UACPsB,OAAQ,CACN,CACEE,OAAQ,QACRC,MAAO,CACL/F,KAAM,cAERiC,SAAU,CACR,CACEjC,KAAM,iBACNK,KAAM,OAER,CACEL,KAAM,aACNK,KAAM,QAGV4E,QAAS,IAEX,CACEa,OAAQ,OACRC,MAAO,CACL/F,KAAM,iBAERiC,SAAU,CACR,CACEjC,KAAM,wBACNK,KAAM,OAER,CACEL,KAAM,gBACNK,KAAM,QAGV4E,QAAS,MAIf,CACExE,SAAU,YACV6D,MAAO,UACPsB,OAAQ,CACN,CACEE,OAAQ,QACRC,MAAO,CACL/F,KAAM,cAERiC,SAAU,CACR,CACEjC,KAAM,iBACNK,KAAM,OAER,CACEL,KAAM,aACNK,KAAM,QAGV4E,QAAS,IAEX,CACEa,OAAQ,UACRC,MAAO,CACL/F,KAAM,eAERiC,SAAU,CACR,CACEjC,KAAM,uBACNK,KAAM,OAER,CACEL,KAAM,cACNK,KAAM,QAGV4E,QAAS,MAIf,CACExE,SAAU,SACV6D,MAAO,UACPsB,OAAQ,CACN,CACEE,OAAQ,QACRC,MAAO,CACL/F,KAAM,cAERiC,SAAU,CACR,CACEjC,KAAM,iBACNK,KAAM,OAER,CACEL,KAAM,aACNK,KAAM,QAGV4E,QAAS,IAEX,CACEa,OAAQ,OACRC,MAAO,CACL/F,KAAM,iBAERiC,SAAU,CACR,CACEjC,KAAM,wBACNK,KAAM,OAER,CACEL,KAAM,gBACNK,KAAM,QAGV4E,QAAS,MAIf,CACExE,SAAU,UACV6D,MAAO,UACPsB,OAAQ,CACN,CACEE,OAAQ,QACRC,MAAO,CACL/F,KAAM,cAERiC,SAAU,CACR,CACEjC,KAAM,iBACNK,KAAM,OAER,CACEL,KAAM,aACNK,KAAM,QAGV4E,QAAS,CACP,CACEjF,KAAM,cACNK,KAAM,sBAIZ,CACEyF,OAAQ,UACRC,MAAO,CACL/F,KAAM,qBAERiC,SAAU,CACR,CACEjC,KAAM,wBACNK,KAAM,OAER,CACEL,KAAM,oBACNK,KAAM,QAGV4E,QAAS,MAIf,CACExE,SAAU,UACV6D,MAAO,UACPsB,OAAQ,CACN,CACEE,OAAQ,SACRC,MAAO,CACL/F,KAAM,cAERiC,SAAU,CACR,CACEjC,KAAM,iBACNK,KAAM,OAER,CACEL,KAAM,aACNK,KAAM,QAGV4E,QAAS,CACP,CACEjF,KAAM,cACNK,KAAM,sBAIZ,CACEyF,OAAQ,OACRC,MAAO,CACL/F,KAAM,iBAERiC,SAAU,CACR,CACEjC,KAAM,wBACNK,KAAM,OAER,CACEL,KAAM,gBACNK,KAAM,QAGV4E,QAAS,ODzMqB/C,KAAI,SAACzB,GACzC,OAAO,wBAAC,EAAD,2BAAmBA,GAAnB,IAA6BoH,IAAKpH,EAASA,eAE9CqH,EETY,CAChB,CACE3B,QAAS,SACTP,OAAQ,CACN,CACEa,SAAU,oBACVnC,MAAO,UACP9C,OAAQ,CACNmF,SAAU,SACVE,SAAU,cACVE,aAAc,aAGlB,CACEN,SAAU,kBACVnC,MAAO,UACP9C,OAAQ,CACNmF,SAAU,SACVE,SAAU,cACVE,aAAc,WAGlB,CACEN,SAAU,cACVnC,MAAO,UACP9C,OAAQ,CACNmF,SAAU,SACVE,SAAU,WACVE,aAAc,aAGlB,CACEN,SAAU,YACVnC,MAAO,UACP9C,OAAQ,CACNmF,SAAU,SACVE,SAAU,WACVE,aAAc,YAIpB1G,KAAM,CAAC,CAAEoG,SAAU,mBAAoBjF,OAAQ,CAAEmF,SAAU,aAE7D,CACER,QAAS,SACTP,OAAQ,CACN,CACEa,SAAU,oBACVnC,MAAO,UACP9C,OAAQ,CACNmF,SAAU,SACVE,SAAU,cACVE,aAAc,aAGlB,CACEN,SAAU,kBACVnC,MAAO,UACP9C,OAAQ,CACNmF,SAAU,SACVE,SAAU,cACVE,aAAc,WAGlB,CACEN,SAAU,cACVnC,MAAO,UACP9C,OAAQ,CACNmF,SAAU,SACVE,SAAU,WACVE,aAAc,aAGlB,CACEN,SAAU,YACVnC,MAAO,UACP9C,OAAQ,CACNmF,SAAU,SACVE,SAAU,WACVE,aAAc,YAIpB1G,KAAM,CAAC,CAAEoG,SAAU,mBAAoBjF,OAAQ,CAAEmF,SAAU,aAE7D,CACER,QAAS,SACTP,OAAQ,CACN,CACEa,SAAU,oBACVnC,MAAO,UACP9C,OAAQ,CACNmF,SAAU,SACVE,SAAU,cACVE,aAAc,aAGlB,CACEN,SAAU,kBACVnC,MAAO,UACP9C,OAAQ,CACNmF,SAAU,SACVE,SAAU,cACVE,aAAc,WAGlB,CACEN,SAAU,cACVnC,MAAO,UACP9C,OAAQ,CACNmF,SAAU,SACVE,SAAU,WACVE,aAAc,aAGlB,CACEN,SAAU,YACVnC,MAAO,UACP9C,OAAQ,CACNmF,SAAU,SACVE,SAAU,WACVE,aAAc,YAIpB1G,KAAM,CAAC,CAAEoG,SAAU,mBAAoBjF,OAAQ,CAAEmF,SAAU,aAE7D,CACER,QAAS,SACTP,OAAQ,CACN,CACEa,SAAU,oBACVnC,MAAO,UACP9C,OAAQ,CACNmF,SAAU,SACVE,SAAU,cACVE,aAAc,aAGlB,CACEN,SAAU,kBACVnC,MAAO,UACP9C,OAAQ,CACNmF,SAAU,SACVE,SAAU,cACVE,aAAc,WAGlB,CACEN,SAAU,cACVnC,MAAO,UACP9C,OAAQ,CACNmF,SAAU,SACVE,SAAU,WACVE,aAAc,aAGlB,CACEN,SAAU,YACVnC,MAAO,UACP9C,OAAQ,CACNmF,SAAU,SACVE,SAAU,WACVE,aAAc,YAIpB1G,KAAM,CAAC,CAAEoG,SAAU,mBAAoBjF,OAAQ,CAAEmF,SAAU,cF9JtCzE,KAAI,SAAC6F,GAC5B,OAAO,wBAAC,EAAD,2BAAeA,GAAf,IAAmBF,IAAKE,EAAG5B,cAarB6B,EAVH,kBACV,sBAAKjI,UAAU,yDAAf,UACE,qBAAKA,UAAU,cAAf,SAA8B6H,IAC9B,sBAAK7H,UAAU,UAAf,UACE,cAAC,EAAD,IACC+H,SGNQG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1G,MAAK,YAAkD,IAA/C2G,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.8cc64a9d.chunk.js","sourcesContent":["import React from \"react\";\nimport Loader from \"react-loaders\";\n\nfunction PacMan() {\n  return (\n    <div className=\"h-40 flex justify-center items-center\">\n      <Loader type=\"pacman\" size={\"custom\"} active />\n    </div>\n  );\n}\n\nexport default PacMan;\n","import React from \"react\"\n\nconst TextCounter = (props) => {\n  return (\n    <p className=\"text-left text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\n      {props.text}: {props.data}\n    </p>\n  )\n}\n\nexport default TextCounter\n","export const config = {\n  updateInterval: 60_000,\n  logUrl: \"https://cavea-test-api-php-review-develop-3zknud.cavea.dev\",\n  localUrl: \"http://127.0.0.1:8000\",\n  graphHeight: 120,\n}\n","import React, { Component } from \"react\"\nimport PacMan from \"../../loader/pacMan\"\nimport axios from \"axios\"\nimport TextCounter from \"../../counters/TextCounter\"\nimport { config } from \"../../../config/Settings\"\n\nclass Average extends Component {\n  constructor(props) {\n    super(props)\n    this.platform = this.props.platform\n    this.type = this.props.type\n    this.state = {\n      data: null,\n      loading: true,\n      error: false,\n    }\n    this.getAverage = this.getAverage.bind(this)\n  }\n\n  componentDidMount() {\n    this.getAverage()\n\n    this.updateMetric = setInterval(this.getAverage, config.updateInterval)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.updateMetric)\n  }\n\n  getAverage() {\n    let endpoint = \"average\",\n      url\n    if (this.type.includes(\"_count\")) endpoint = \"aph\"\n\n    url = `${config.logUrl}/api/logs/import/${endpoint}`\n\n    axios\n      .get(`${url}`, {\n        params: {\n          platform: this.platform,\n          type: this.type,\n        },\n      })\n      .then((response) => {\n        const { avg } = response.data\n        this.setState({ data: avg, loading: false, error: false })\n      })\n      .catch(() => {\n        return this.setState({ error: true, loading: false })\n      })\n  }\n\n  render() {\n    if (this.state.data && !this.state.error && !this.state.loading) {\n      return <TextCounter data={this.state.data} text={this.props.text} />\n    } else if (this.state.error) {\n      return (\n        <p className=\"text-center text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\n          An Error Occurred!\n        </p>\n      )\n    } else {\n      return <PacMan />\n    }\n  }\n}\n\nexport default Average\n","import React, { useState } from \"react\"\nimport Average from \"../../graphs/importers/Average\"\n\nfunction Averages(props) {\n  const [averages] = useState([...props.data])\n  return (\n    <>\n      {averages.map((average, index) => {\n        return (\n          <Average\n            key={\"average-\" + index}\n            platform={props.platform}\n            type={average.type}\n            text={average.text}\n          />\n        )\n      })}\n    </>\n  )\n}\n\nexport default Averages\n","import dayjs from \"dayjs\"\n\nexport function reverseCalcDates(data) {\n  let i,\n    results = [],\n    reverse_api_result = {}\n  let now = new Date()\n  let targetDays = 30\n  const get_date = (date) => {\n    return dayjs(date).format(\"YYYY-MM-DD\")\n  }\n\n  data.map((data) => {\n    return (reverse_api_result[data.date] = data.count)\n  })\n\n  for (i = targetDays; i > 0; --i) {\n    results.push({\n      date: get_date(now),\n      count: reverse_api_result[get_date(now)] || 0,\n    })\n\n    now.setDate(now.getDate() - 1)\n  }\n\n  return results.reverse()\n}\n","import React, { Component } from \"react\"\nimport PacMan from \"../../loader/pacMan\"\nimport axios from \"axios\"\nimport {\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\"\nimport { config } from \"../../../config/Settings\"\nimport dayjs from \"dayjs\"\nimport { reverseCalcDates } from \"../../../helpers/reverseCalcDates\"\n\nclass LineGraph extends Component {\n  constructor(props) {\n    super(props)\n    this.platform = this.props.platform\n    this.type = this.props.type\n    this.state = {\n      data: null,\n      loading: true,\n      error: null,\n    }\n    this.getTotalImports = this.getTotalImports.bind(this)\n  }\n\n  componentDidMount() {\n    this.getTotalImports()\n\n    this.updateMetric = setInterval(this.getTotalImports, config.updateInterval)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.updateMetric)\n  }\n\n  getTotalImports() {\n    axios\n      .get(`${config.logUrl}/api/logs/import/count_by_date`, {\n        params: {\n          platform: this.platform,\n          type: this.type,\n        },\n      })\n      .then((response) => {\n        const reverse_result = reverseCalcDates(response.data)\n        const logs = reverse_result.map((data) => {\n          return {\n            x: dayjs(data.date).format(\"YYYY-MM-DD\"),\n            y: parseInt(data.count),\n          }\n        })\n\n        this.setState({ data: logs, loading: false, error: false })\n      })\n      .catch(() => {\n        return this.setState({ error: true, loading: false })\n      })\n  }\n\n  render() {\n    if (this.state.data && !this.state.error && !this.state.loading) {\n      return (\n        <ResponsiveContainer width=\"100%\" height={config.graphHeight}>\n          <LineChart data={this.state.data}>\n            <XAxis dataKey=\"x\" stroke=\"#222\" tick={false} />\n            <YAxis dataKey=\"y\" stroke=\"#222\" />\n            <Tooltip />\n            <Line\n              dataKey=\"y\"\n              name=\"Count\"\n              stroke={this.props.color}\n              strokeWidth={5}\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      )\n    } else if (this.state.error) {\n      return (\n        <p className=\"text-center text-gray-900 dark:text-gray-200\">\n          An Error Occurred!\n        </p>\n      )\n    } else {\n      return <PacMan />\n    }\n  }\n}\n\nexport default LineGraph\n","import React, { Component } from \"react\"\nimport PacMan from \"../../loader/pacMan\"\nimport axios from \"axios\"\nimport { config } from \"../../../config/Settings\"\n\nclass Runtime extends Component {\n  constructor(props) {\n    super(props)\n    this.platform = this.props.platform\n    this.type = this.props.type\n    this.state = {\n      data: null,\n      loading: true,\n      error: null,\n    }\n    this.getRuntime = this.getRuntime.bind(this)\n  }\n\n  componentDidMount() {\n    this.getRuntime()\n\n    this.updateMetric = setInterval(this.getRuntime, config.updateInterval)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.updateMetric)\n  }\n\n  getRuntime() {\n    axios\n      .get(\n        `${config.logUrl}/api/logs/import/runtime`,\n        {\n          params: {\n            platform: this.platform,\n            type: this.type,\n          },\n        }\n      )\n      .then((response) => {\n        this.setState({ data: response.data, loading: false, error: false })\n      })\n      .catch((e) => {\n        return this.setState({ error: e, loading: false })\n      })\n  }\n\n  philipMethod() {\n    const barHeight = \"20px\"\n\n    return (\n      <div\n        className=\"health_container\"\n        style={{\n          width: \"100px\",\n          height: barHeight,\n          position: \"relative\",\n          background:\n            \"linear-gradient(90deg, rgba(255,0,0,1) 0%, rgba(255,255,0,1) 25%, rgba(26,255,0,1) 100%)\",\n          display: \"flex\",\n          alignItems: \"center\",\n        }}\n      >\n        <div\n          className=\"health_bar\"\n          style={{\n            height: barHeight,\n            width: `${this.state.data.runtime}%`,\n            position: \"absolute\",\n            right: 0,\n            top: 0,\n            backgroundColor: \"lightgrey\",\n            zIndex: 1,\n          }}\n        />\n        <p\n          className=\"subpixel-antialiased\"\n          style={{ zIndex: 2, paddingLeft: \"20px\", color: \"rebeccapurple\" }}\n        >\n          {this.state.data.sleep_time}%\n        </p>\n      </div>\n    )\n  }\n\n  render() {\n    if (this.state.data && !this.state.error && !this.state.loading) {\n      return this.philipMethod()\n    } else if (this.state.error) {\n      return (\n        <p className=\"text-center text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\n          An Error Occurred!\n        </p>\n      )\n    } else {\n      return <PacMan />\n    }\n  }\n}\n\nexport default Runtime\n","import React, { useState } from \"react\"\nimport Runtime from \"../../graphs/importers/Runtime\"\n\nfunction Runtimes(props) {\n  const [runtimes] = useState([...props.data])\n  return (\n    <>\n      {runtimes.map((runtime, index) => {\n        return (\n          <Runtime\n            key={\"runtime-\" + index}\n            platform={props.platform}\n            type={runtime.type}\n            text={runtime.text}\n          />\n        )\n      })}\n    </>\n  )\n}\n\nexport default Runtimes\n","import React, { useState } from \"react\"\nimport Averages from \"../text/importers/Averages\"\nimport LineGraph from \"./importers/LineGraph\"\nimport Runtimes from \"../text/importers/Runtimes\"\n\nfunction ImportGraphs(props) {\n  const [graphs] = useState([...props.graphs])\n\n  return graphs.map((graph, index) => {\n    return (\n      <div\n        className=\"metric grid grid-cols-9\"\n        key={graph.platform + graph.header + index}\n      >\n        <div className=\"metric-header grid grid-flow-row-dense auto-rows-min col-span-2\">\n          <div className=\"grid grid-flow-col items-center\">\n            <h2 className=\"text-left font-semibold text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\n              {graph.header}\n            </h2>\n            <Runtimes data={graph.runtime} platform={props.platform} />\n          </div>\n          <Averages data={graph.averages} platform={props.platform} />\n        </div>\n        <div className=\"col-span-7 grid-flow-row-dense\">\n          <LineGraph\n            platform={props.platform}\n            color={props.color}\n            type={graph.total.type}\n            width={200}\n            height={120}\n          />\n        </div>\n      </div>\n    )\n  })\n}\n\nexport default ImportGraphs\n","import React from \"react\"\nimport ImportGraphs from \"./graphs/ImportGraphs\"\n\nfunction ImportMetrics(props) {\n  return (\n    <div id={props.platform + \"-metric\"} className=\"grid\">\n      <h2 className=\"capitalize text-left font-bold text-3xl text-gray-900 dark:text-gray-200 subpixel-antialiased\">\n        {props.platform}\n      </h2>\n      <ImportGraphs\n        graphs={props.graphs}\n        platform={props.platform}\n        color={props.color}\n      />\n    </div>\n  )\n}\n\nexport default ImportMetrics\n","import React, { Component } from \"react\"\nimport PacMan from \"../../loader/pacMan\"\nimport axios from \"axios\"\nimport {\n  Bar,\n  BarChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\"\nimport { config } from \"../../../config/Settings\"\nimport dayjs from \"dayjs\"\nimport { reverseCalcDates } from \"../../../helpers/reverseCalcDates\"\n\nclass AIBarGraph extends Component {\n  constructor(props) {\n    super(props)\n    this.boxName = this.props.boxName\n    this.params = this.props.params\n    this.state = {\n      data: null,\n      loading: true,\n      error: null,\n    }\n    this.getLogs = this.getLogs.bind(this)\n  }\n\n  componentDidMount() {\n    this.getLogs()\n\n    this.updateMetric = setInterval(this.getLogs, config.updateInterval)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.updateMetric)\n  }\n\n  getLogs() {\n    axios\n      .get(`${config.logUrl}/api/logs/ai/count_by_date`, {\n        params: this.params,\n      })\n      .then((response) => {\n        const reverse_result = reverseCalcDates(response.data)\n        const logs = reverse_result.map((data) => {\n          return {\n            x: dayjs(data.date).format(\"YYYY-MM-DD\"),\n            y: parseInt(data.count),\n          }\n        })\n\n        this.setState({ data: logs, loading: false, error: false })\n      })\n      .catch(() => {\n        return this.setState({ error: true, loading: false })\n      })\n  }\n\n  render() {\n    if (this.state.data && !this.state.error && !this.state.loading) {\n      return (\n        <ResponsiveContainer width=\"100%\" height={config.graphHeight}>\n          <BarChart data={this.state.data}>\n            <XAxis dataKey=\"x\" stroke=\"#222\" tick={false} />\n            <YAxis dataKey=\"y\" stroke=\"#222\" />\n            <Tooltip />\n            <Bar dataKey=\"y\" name=\"Count\" fill={this.props.color} />\n          </BarChart>\n        </ResponsiveContainer>\n      )\n    } else if (this.state.error) {\n      return (\n        <p className=\"text-center text-gray-900 dark:text-gray-200\">\n          An Error Occurred!\n        </p>\n      )\n    } else {\n      return <PacMan />\n    }\n  }\n}\n\nexport default AIBarGraph\n","import React, { useState } from \"react\"\nimport AIBarGraph from \"./ai/AIBarGraph\"\n\nfunction AIGraphs(props) {\n  const [graphs] = useState([...props.graphs])\n\n  return graphs.map((graph, index) => {\n    return (\n      <div\n        className=\"metric grid grid-cols-9\"\n        key={graph.subTitle + \"-\" + index}\n      >\n        <div className=\"metric-header grid grid-flow-row auto-rows-min col-span-2\">\n          <h2 className=\"text-left font-semibold text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\n            {graph.subTitle}\n          </h2>\n        </div>\n        <div className=\"col-span-7\">\n          <AIBarGraph {...graph} />\n        </div>\n      </div>\n    )\n  })\n}\n\nexport default AIGraphs\n","import React, { Component } from \"react\"\nimport PacMan from \"../../loader/pacMan\"\nimport axios from \"axios\"\nimport { config } from \"../../../config/Settings\"\n\nclass LatestLog extends Component {\n  constructor(props) {\n    super(props)\n    this.aibox_id = this.props.params.aibox_id\n    this.state = {\n      data: null,\n      loading: true,\n      error: null,\n    }\n    this.getLatestLog = this.getLatestLog.bind(this)\n  }\n\n  componentDidMount() {\n    this.getLatestLog()\n\n    this.updateMetric = setInterval(this.getLatestLog, 10_000)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.updateMetric)\n  }\n\n  getLatestLog() {\n    axios\n      .get(`${config.logUrl}/api/logs/ai/latest_log`, {\n        params: {\n          aibox_id: this.aibox_id,\n        },\n      })\n      .then((response) => {\n        this.setState({ data: response.data, loading: false, error: false })\n      })\n      .catch((e) => {\n        return this.setState({ error: e, loading: false })\n      })\n  }\n\n  render() {\n    if (this.state.data && !this.state.error && !this.state.loading) {\n      return (\n        <code>\n          <p>activity: {this.state.data.activity}</p>\n          <p>severity: {this.state.data.severity}</p>\n          <p>sub_activity: {this.state.data.sub_activity}</p>\n          <p>timestamp: {this.state.data.timestamp}</p>\n        </code>\n      )\n    } else if (this.state.error) {\n      return (\n        <p className=\"text-center text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\n          An Error Occurred!\n        </p>\n      )\n    } else {\n      return <PacMan />\n    }\n  }\n}\n\nexport default LatestLog\n","import React, { useState } from \"react\"\nimport LatestLog from \"./ai/LatestLog\"\n\nfunction AIText(props) {\n  const [content] = useState([...props.text])\n\n  return content.map((text, index) => {\n    return (\n      <div\n        className=\"metric grid grid-cols-9\"\n        key={text.subTitle + \"-\" + index}\n      >\n        <div className=\"metric-header grid grid-flow-row auto-rows-min col-span-2\">\n          <h2 className=\"text-left font-semibold text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\n            {text.subTitle}\n          </h2>\n        </div>\n        <div className=\"col-span-7\">\n          <LatestLog {...text} />\n        </div>\n      </div>\n    )\n  })\n}\n\nexport default AIText\n","import React from \"react\"\nimport AIGraphs from \"./graphs/AIGraphs\"\nimport AIText from \"./text/AIText\"\n\nfunction ai_graphs(props) {\n  if (props.graphs) {\n    return <AIGraphs graphs={props.graphs} />\n  }\n}\n\nfunction ai_text(props) {\n  if (props.text) {\n    return <AIText text={props.text} />\n  }\n}\n\nfunction AIMetrics(props) {\n  return (\n    <div id={props.boxName + \"-metric\"} className=\"grid gap-y-5\">\n      <h2 className=\"capitalize text-left font-bold text-3xl text-gray-900 dark:text-gray-200 subpixel-antialiased\">\n        {props.boxName}\n      </h2>\n      <div className=\"grid grid-cols-2\">{ai_graphs(props)}</div>\n      <div className=\"grid\">{ai_text(props)}</div>\n    </div>\n  )\n}\n\nexport default AIMetrics\n","import React, { Component } from \"react\"\nimport PacMan from \"../../loader/pacMan\"\nimport axios from \"axios\"\nimport { config } from \"../../../config/Settings\"\n\nclass AIStarted extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      data: null,\n      loading: true,\n      error: null,\n    }\n    this.getAiStarted = this.getAiStarted.bind(this)\n  }\n\n  componentDidMount() {\n    this.getAiStarted()\n\n    this.updateMetric = setInterval(this.getAiStarted, config.updateInterval)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.updateMetric)\n  }\n\n  getAiStarted() {\n    axios\n      .get(\n        `https://spi.cavea.io/ai/que?filter={%22state%22:%20%22ai-started%22}`\n      )\n      .then((response) => {\n        this.setState({ data: response.data, loading: false, error: false })\n        console.log(this.state.data)\n      })\n      .catch((e) => {\n        return this.setState({ error: e, loading: false })\n      })\n  }\n\n  activeItems() {\n    const activeItems = this.state.data.length\n    if (activeItems > 13 && activeItems < 17) {\n      return {\n        textShadow: \"0 0 5px #EEDD33\",\n      }\n    } else if (activeItems > 17) {\n      return {\n        textShadow: \"0 0 5px #F50010\",\n      }\n    }\n  }\n\n  render() {\n    if (this.state.data && !this.state.error && !this.state.loading) {\n      return (\n        <h1\n          style={this.activeItems()}\n          className=\"text-center text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\"\n        >\n          Num. active Items: {this.state.data.length}\n        </h1>\n      )\n    } else if (this.state.error) {\n      return (\n        <p className=\"text-center text-gray-900 dark:text-gray-200 text-xl subpixel-antialiased\">\n          An Error Occurred!\n        </p>\n      )\n    } else {\n      return <PacMan />\n    }\n  }\n}\n\nexport default AIStarted\n","import ImportMetrics from \"./components/ImportMetrics\"\nimport AIMetrics from \"./components/AIMetrics\"\nimport { importers } from \"./config/Importers\"\nimport { AI } from \"./config/AI\"\nimport AIStarted from './components/text/ai/AIStarted'\n\nconst loadImporterMetrics = importers.map((platform) => {\n  return <ImportMetrics {...platform} key={platform.platform} />\n})\nconst loadAIMetrics = AI.map((ai) => {\n  return <AIMetrics {...ai} key={ai.boxName} />\n})\n\nconst App = () => (\n  <div className=\"p-5 mx-auto grid md:grid-cols-1 lg:grid-cols-2 gap-x-5\">\n    <div className=\"import-logs\">{loadImporterMetrics}</div>\n    <div className=\"ai-logs\">\n      <AIStarted />\n      {loadAIMetrics}\n    </div>\n  </div>\n)\n\nexport default App\n","export const importers = [\n  {\n    platform: \"facebook\",\n    color: \"#4267B2\",\n    graphs: [\n      {\n        header: \"Posts\",\n        total: {\n          type: \"post_count\",\n        },\n        averages: [\n          {\n            type: \"process_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"post_count\",\n            text: \"P/h\",\n          },\n        ],\n        runtime: [],\n      },\n      {\n        header: \"Live\",\n        total: {\n          type: \"streams_count\",\n        },\n        averages: [\n          {\n            type: \"process_stream_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"streams_count\",\n            text: \"S/h\",\n          },\n        ],\n        runtime: [],\n      },\n    ],\n  },\n  {\n    platform: \"instagram\",\n    color: \"#C13584\",\n    graphs: [\n      {\n        header: \"Posts\",\n        total: {\n          type: \"post_count\",\n        },\n        averages: [\n          {\n            type: \"process_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"post_count\",\n            text: \"P/h\",\n          },\n        ],\n        runtime: [],\n      },\n      {\n        header: \"Stories\",\n        total: {\n          type: \"story_count\",\n        },\n        averages: [\n          {\n            type: \"process_story_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"story_count\",\n            text: \"S/h\",\n          },\n        ],\n        runtime: [],\n      },\n    ],\n  },\n  {\n    platform: \"twitch\",\n    color: \"#6441a5\",\n    graphs: [\n      {\n        header: \"Clips\",\n        total: {\n          type: \"post_count\",\n        },\n        averages: [\n          {\n            type: \"process_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"post_count\",\n            text: \"P/h\",\n          },\n        ],\n        runtime: [],\n      },\n      {\n        header: \"Live\",\n        total: {\n          type: \"streams_count\",\n        },\n        averages: [\n          {\n            type: \"process_stream_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"streams_count\",\n            text: \"S/h\",\n          },\n        ],\n        runtime: [],\n      },\n    ],\n  },\n  {\n    platform: \"twitter\",\n    color: \"#1DA1F2\",\n    graphs: [\n      {\n        header: \"Posts\",\n        total: {\n          type: \"post_count\",\n        },\n        averages: [\n          {\n            type: \"process_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"post_count\",\n            text: \"P/h\",\n          },\n        ],\n        runtime: [\n          {\n            type: \"sleep_timer\",\n            text: \"Idle% = x / 1,44\",\n          },\n        ],\n      },\n      {\n        header: \"Metrics\",\n        total: {\n          type: \"post_metric_count\",\n        },\n        averages: [\n          {\n            type: \"process_metric_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"post_metric_count\",\n            text: \"P/h\",\n          },\n        ],\n        runtime: [],\n      },\n    ],\n  },\n  {\n    platform: \"youtube\",\n    color: \"#FF0000\",\n    graphs: [\n      {\n        header: \"Videos\",\n        total: {\n          type: \"post_count\",\n        },\n        averages: [\n          {\n            type: \"process_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"post_count\",\n            text: \"P/h\",\n          },\n        ],\n        runtime: [\n          {\n            type: \"sleep_timer\",\n            text: \"Idle% = x / 1,44\",\n          },\n        ],\n      },\n      {\n        header: \"Live\",\n        total: {\n          type: \"streams_count\",\n        },\n        averages: [\n          {\n            type: \"process_stream_handle\",\n            text: \"H/h\",\n          },\n          {\n            type: \"streams_count\",\n            text: \"S/h\",\n          },\n        ],\n        runtime: [],\n      },\n    ],\n  },\n  /*{\n    platform: \"trovo\",\n    color: \"#FF0000\",\n    graphs: [\n      {\n        header: \"Streams\",\n        total: {\n          type: \"stream_imported\",\n        },\n        averages: [\n          {\n            type: \"process_stream_handle\",\n            text: \"Avg. Channels/h\",\n          },\n          {\n            type: \"stream_imported\",\n            text: \"Avg. Streams/h\",\n          },\n        ],\n      },\n      {\n        header: \"Clips?!?\",\n        total: {\n          type: \"post_imported\",\n        },\n        averages: [\n          {\n            type: \"process_handle\",\n            text: \"Avg. Channels/h\",\n          },\n          {\n            type: \"post_imported\",\n            text: \"Avg. Clips/h/h\",\n          },\n        ],\n      },\n    ],\n  },*/\n]\n","export const AI = [\n  {\n    boxName: \"AIBOX1\",\n    graphs: [\n      {\n        subTitle: \"Download Finished\",\n        color: \"#99BBFF\",\n        params: {\n          aibox_id: \"aibox1\",\n          activity: \"DOWNLOADING\",\n          sub_activity: \"FINISHED\",\n        },\n      },\n      {\n        subTitle: \"Download Failed\",\n        color: \"#EEDD33\",\n        params: {\n          aibox_id: \"aibox1\",\n          activity: \"DOWNLOADING\",\n          sub_activity: \"FAILED\",\n        },\n      },\n      {\n        subTitle: \"AI Finished\",\n        color: \"#00DD55\",\n        params: {\n          aibox_id: \"aibox1\",\n          activity: \"ANALYSIS\",\n          sub_activity: \"FINISHED\",\n        },\n      },\n      {\n        subTitle: \"AI Failed\",\n        color: \"#F50010\",\n        params: {\n          aibox_id: \"aibox1\",\n          activity: \"ANALYSIS\",\n          sub_activity: \"FAILED\",\n        },\n      },\n    ],\n    text: [{ subTitle: \"Latest Log Entry\", params: { aibox_id: \"aibox1\" } }],\n  },\n  {\n    boxName: \"AIBOX2\",\n    graphs: [\n      {\n        subTitle: \"Download Finished\",\n        color: \"#99BBFF\",\n        params: {\n          aibox_id: \"aibox2\",\n          activity: \"DOWNLOADING\",\n          sub_activity: \"FINISHED\",\n        },\n      },\n      {\n        subTitle: \"Download Failed\",\n        color: \"#EEDD33\",\n        params: {\n          aibox_id: \"aibox2\",\n          activity: \"DOWNLOADING\",\n          sub_activity: \"FAILED\",\n        },\n      },\n      {\n        subTitle: \"AI Finished\",\n        color: \"#00DD55\",\n        params: {\n          aibox_id: \"aibox2\",\n          activity: \"ANALYSIS\",\n          sub_activity: \"FINISHED\",\n        },\n      },\n      {\n        subTitle: \"AI Failed\",\n        color: \"#F50010\",\n        params: {\n          aibox_id: \"aibox2\",\n          activity: \"ANALYSIS\",\n          sub_activity: \"FAILED\",\n        },\n      },\n    ],\n    text: [{ subTitle: \"Latest Log Entry\", params: { aibox_id: \"aibox2\" } }],\n  },\n  {\n    boxName: \"AIBOX3\",\n    graphs: [\n      {\n        subTitle: \"Download Finished\",\n        color: \"#99BBFF\",\n        params: {\n          aibox_id: \"aibox3\",\n          activity: \"DOWNLOADING\",\n          sub_activity: \"FINISHED\",\n        },\n      },\n      {\n        subTitle: \"Download Failed\",\n        color: \"#EEDD33\",\n        params: {\n          aibox_id: \"aibox3\",\n          activity: \"DOWNLOADING\",\n          sub_activity: \"FAILED\",\n        },\n      },\n      {\n        subTitle: \"AI Finished\",\n        color: \"#00DD55\",\n        params: {\n          aibox_id: \"aibox3\",\n          activity: \"ANALYSIS\",\n          sub_activity: \"FINISHED\",\n        },\n      },\n      {\n        subTitle: \"AI Failed\",\n        color: \"#F50010\",\n        params: {\n          aibox_id: \"aibox3\",\n          activity: \"ANALYSIS\",\n          sub_activity: \"FAILED\",\n        },\n      },\n    ],\n    text: [{ subTitle: \"Latest Log Entry\", params: { aibox_id: \"aibox3\" } }],\n  },\n  {\n    boxName: \"AIBOX4\",\n    graphs: [\n      {\n        subTitle: \"Download Finished\",\n        color: \"#99BBFF\",\n        params: {\n          aibox_id: \"aibox4\",\n          activity: \"DOWNLOADING\",\n          sub_activity: \"FINISHED\",\n        },\n      },\n      {\n        subTitle: \"Download Failed\",\n        color: \"#EEDD33\",\n        params: {\n          aibox_id: \"aibox4\",\n          activity: \"DOWNLOADING\",\n          sub_activity: \"FAILED\",\n        },\n      },\n      {\n        subTitle: \"AI Finished\",\n        color: \"#00DD55\",\n        params: {\n          aibox_id: \"aibox4\",\n          activity: \"ANALYSIS\",\n          sub_activity: \"FINISHED\",\n        },\n      },\n      {\n        subTitle: \"AI Failed\",\n        color: \"#F50010\",\n        params: {\n          aibox_id: \"aibox4\",\n          activity: \"ANALYSIS\",\n          sub_activity: \"FAILED\",\n        },\n      },\n    ],\n    text: [{ subTitle: \"Latest Log Entry\", params: { aibox_id: \"aibox4\" } }],\n  },\n  /*{\n    boxName: \"DEV1\",\n    graphs: [\n      {\n        subTitle: \"AI Posts\",\n        color: \"#F30482\",\n        params: {\n          aibox_id: \"dev1\",\n          activity: \"ANALYSIS\",\n          sub_activity: \"POSTING\",\n        },\n      },\n    ],\n  },\n  {\n    boxName: \"DEV2\",\n    graphs: [\n      {\n        subTitle: \"AI Posts\",\n        color: \"#F30482\",\n        params: {\n          aibox_id: \"dev2\",\n          activity: \"ANALYSIS\",\n          sub_activity: \"POSTING\",\n        },\n      },\n    ],\n  },*/\n]\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}